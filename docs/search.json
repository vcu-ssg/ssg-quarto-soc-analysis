[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "analysis of teaching",
    "section": "",
    "text": "this site looks at teaching loads in VCU engineering over the past several semesters"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site was creating in quarto."
  },
  {
    "objectID": "clean.html",
    "href": "clean.html",
    "title": "Data and Data Cleaning",
    "section": "",
    "text": "This script describes the data and walks through a process of data cleaning. At completion of this script all the individual semester data files will be combined into a single dataframe for analysis."
  },
  {
    "objectID": "clean.html#sources-of-data",
    "href": "clean.html#sources-of-data",
    "title": "Data and Data Cleaning",
    "section": "Sources of data",
    "text": "Sources of data\nData were pulled from the VCU Reporting Center in the Staff | Course Schedule Report as shown below:\nReports are run by semester for the College of Engineering and stored in separate files. Care should be taken to open each file after it’s been saved and RESAVE the file into XLSX format.\n\n\n\n\n\n\n\n\n\n\nThe files are named appropriately and stored in the data folder in this repository.\n\n\n\n\n\nFile name\nTerm Code\nAcad Year\nPeriod Code\nPeriod Name\n\n\n\n\nVCU-SOC-202110-FA2020.xlsx\n202110\nAY20-21\nFA2020\nFall 2020\n\n\nVCU-SOC-202120-SP2021.xlsx\n202120\nAY20-21\nSP2021\nSpring 2021\n\n\nVCU-SOC-202130-SU2021.xlsx\n202130\nAY20-21\nSU2021\nSummer 2021\n\n\nVCU-SOC-202210-FA2021.xlsx\n202210\nAY21-22\nFA2021\nFall 2021\n\n\nVCU-SOC-202220-SP2022.xlsx\n202220\nAY21-22\nSP2022\nSpring 2022\n\n\nVCU-SOC-202230-SU2022.xlsx\n202230\nAY21-22\nSU2022\nSummer 2022\n\n\nVCU-SOC-202310-FA2022.xlsx\n202310\nAY22-23\nFA2022\nFall 2022\n\n\nVCU-SOC-202320-SP2023.xlsx\n202320\nAY22-23\nSP2023\nSpring 2023\n\n\nVCU-SOC-202330-SU2023.xlsx\n202330\nAY22-23\nSU2023\nSummer 2023\n\n\nVCU-SOC-202410-FA2023.xlsx\n202410\nAY23-24\nFA2023\nFall 2023"
  },
  {
    "objectID": "clean.html#combining-to-single-data-frame",
    "href": "clean.html#combining-to-single-data-frame",
    "title": "Data and Data Cleaning",
    "section": "Combining to single data frame",
    "text": "Combining to single data frame\nThe following section combines each XLSX into a single data frame. The contents of the files are variable in length depending on the number of sections taught during any given semester.\nThe appropriate block starts one row after the row with the keyword TERM in the first column, denoting the header row. The appropriate block ends with the row prior to the row with the keyword N =.\nWe’re assuming that all xlsx workbooks share the same columns and names.\nThe dataframe is stored to a CSV file named ‘final_df.csv’.\n\n# Initialize an empty list to store trimmed DataFrames\ntrimmed_dfs = []\n\n# Iterate through the list of XLSX file names\nfor file_name in xlsx_df['file_name']:\n    # Load the XLSX file into a DataFrame\n    full_path = os.path.join(directory_path, file_name)\n    df = pd.read_excel(full_path)\n    \n    # Find the row index where \"TERM\" is in the first column\n    term_index = df.index[df.iloc[:, 0] == \"TERM\"].tolist()[0]\n    \n    # Find the row index where \"N=\" is in the first column\n    n_index = df.index[df.iloc[:, 0].str.startswith(\"N =\").fillna(False)].tolist()[0]\n\n    # Clip the desired block and add column names\n    trimmed_df = df.loc[term_index + 1 : n_index - 1]\n    trimmed_df.columns = df.iloc[term_index].values\n\n    # Append the trimmed DataFrame to the list\n    trimmed_dfs.append(trimmed_df)\n\n# Combine the individual dataframes into one big one.\nsections_df = pd.concat(trimmed_dfs, ignore_index=True)\n\n# Merge in the term and period data from the xlsx_df dataframe\n\nsections_df['TERM'] = sections_df['TERM'].astype(str)\nxlsx_df['term_code'] = xlsx_df['term_code'].astype(str)\nsections_df = pd.merge(sections_df,xlsx_df,left_on='TERM', right_on='term_code', how='left')"
  },
  {
    "objectID": "clean.html#compute-appropriate-aggregates",
    "href": "clean.html#compute-appropriate-aggregates",
    "title": "Data and Data Cleaning",
    "section": "Compute appropriate aggregates",
    "text": "Compute appropriate aggregates\n\n# Create various aggregate columns\nsections_df['sum_term_crse_crn'] = 1.0 / sections_df.groupby(['TERM','COURSE','CRN'])['CRN'].transform('count')\nsections_df['sum_term_crse_crn_students'] = sections_df['ACTUAL ENROLLMENT'] * sections_df['sum_term_crse_crn']\nsections_df['sum_term_crse'] = 1.0 / sections_df.groupby(['TERM','COURSE'])['CRN'].transform('count')\nsections_df['sum_term'] = 1.0 / sections_df.groupby(['TERM'])['CRN'].transform('count')\n\n# Store as CSV file\nsections_df.to_csv('sections_df.csv', index=False)"
  },
  {
    "objectID": "clean.html#explore-the-data",
    "href": "clean.html#explore-the-data",
    "title": "Data and Data Cleaning",
    "section": "Explore the data",
    "text": "Explore the data\n\nColumns in the dataframe\n\nprint(sections_df.columns)\n\nIndex(['TERM', 'PART_OF_TERM', 'COLLEGE', 'DEPT', 'COURSE', 'SECT', 'CRN',\n       'TYPE', 'MIN CREDITS', 'MAX CREDITS', 'TITLE', 'CROSS-LIST', 'MAX SIZE',\n       'ACTUAL ENROLLMENT', 'WAITLIST MAX', 'WAITLIST ACTUAL',\n       'PRIMARY INSTRUCTOR FIRST NAME', 'PRIMARY INSTRUCTOR LAST NAME',\n       'SECONDARY INSTRUCTOR FIRST NAME', 'SECONDARY INSTRUCTOR LAST NAME',\n       'START DATE', 'END DATE', 'MON-IND', 'TUE-IND', 'WED-IND', 'THU-IND',\n       'FRI-IND', 'SAT-IND', 'SUN-IND', 'BEGIN TIME', 'END TIME', 'BUILDING',\n       'ROOM', 'MODALITY CODE', 'MODALITY TEXT',\n       'CROSS_LIST_MAXIMUM_ENROLLMENT', 'CROSS_LIST_ENROLLMENT', 'file_name',\n       'term_code', 'academic_year', 'period_code', 'period_name',\n       'sum_term_crse_crn', 'sum_term_crse_crn_students', 'sum_term_crse',\n       'sum_term', 'ins1_last', 'ins1_first', 'ins2_last', 'ins2_first',\n       'instructor_1', 'instructor_2'],\n      dtype='object')\n\n\n\n\nCollege-wide measures over time\nThis table presents a summary of courses (e.g., CMSC 255, CMSC 355, etc.), sections (or CRN), and student enrollments by semester in our data file.\n\n\n\n\n\nTerm\nTerm Name\nCourse Sum\nCRN Sum\nStudent Sum\n\n\n\n\n202110\nFall 2020\n160\n1160\n5713\n\n\n202120\nSpring 2021\n152\n1161\n5639\n\n\n202130\nSummer 2021\n36\n645\n578\n\n\n202210\nFall 2021\n164\n1223\n5883\n\n\n202220\nSpring 2022\n149\n680\n5762\n\n\n202230\nSummer 2022\n32\n140\n564\n\n\n202310\nFall 2022\n164\n575\n6564\n\n\n202320\nSpring 2023\n150\n690\n6233\n\n\n202330\nSummer 2023\n30\n155\n512\n\n\n202410\nFall 2023\n161\n692\n7531\n\n\n\n\n\n\n\n\n\n\n\n\nStudents taught for Fall 2023 by department\n\n\n\n\n\nDept\nCourse Sum\nCRN Sum\nStudent Sum\n\n\n\n\nCMSC\n36\n126\n3003\n\n\nEGRB\n32\n107\n707\n\n\nEGRC\n14\n63\n341\n\n\nEGRE\n32\n89\n794\n\n\nEGRM\n32\n158\n1870\n\n\nENGR\n15\n149\n816\n\n\n\n\n\n\n\n\n\n\n\n\nFall 2023 Teaching for CMSC\n\n\n\n\n\nCMSC210\n40552\nCOMPUTERS AND PROGRAMMING\nLEC\nDuke,Debra\n\nOnline-asynchronous instruct\n0\n1\n99\n\n\nCMSC210\n42083\nCOMPUTERS AND PROGRAMMING\nLEC\nDuke,Debra\n\nOnline-asynchronous instruct\n0\n1\n78\n\n\nCMSC235\n46194\nCOMPUTING AND DATA ETHICS\nLEC\nChaitankar,Vijender\n\nOnline-synchronous instruction\n1\n1\n390\n\n\nCMSC254\n43736\nINTRO TO PROBLEM-SOLVING\nLEC\nGusukuma,Luke\n\nFace-to-Face instruction\n0\n1\n40\n\n\nCMSC254\n44838\nINTRO TO PROBLEM-SOLVING\nLEC\nSands,Allison\n\nFace-to-Face instruction\n0\n1\n39\n\n\nCMSC254\n46793\nINTRO TO PROBLEM-SOLVING\nLEC\nBudwell,Caroline\n\nFace-to-Face instruction\n0\n1\n40\n\n\nCMSC254\n46878\nINTRO TO PROBLEM-SOLVING\nLEC\nTraub,Adam\n\nFace-to-Face instruction\n0\n1\n39\n\n\nCMSC255\n37573\nINTRODUCTION TO PROGRAMMING\nLEC\nGrove,Ralph\n\nHybrid-synchronous instruction\n0\n1\n46\n\n\nCMSC255\n41688\nINTRODUCTION TO PROGRAMMING\nLEC\nSparks,Claire\n\nOnline-asynchronous instruct\n0\n1\n25\n\n\nCMSC255\n43404\nINTRODUCTION TO PROGRAMMING\nLEC\nGusukuma,Luke\n\nFace-to-Face instruction\n0\n1\n56\n\n\nCMSC255\n45869\nINTRODUCTION TO PROGRAMMING\nLEC\nSparks,Claire\n\nHybrid-synchronous instruction\n0\n1\n80\n\n\nCMSC256\n36067\nDATA STRUCTURE & OBJECT PROG\nLEC\nDuke,Debra\n\nHybrid-synchronous instruction\n0\n1\n83\n\n\nCMSC256\n41689\nDATA STRUCTURE & OBJECT PROG\nLEC\nDuke,Debra\n\nOnline-synchronous instruction\n0\n1\n31\n\n\nCMSC257\n34519\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\n\nHybrid-synchronous instruction\n0\n1\n37\n\n\nCMSC257\n41690\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\n\nOnline-asynchronous instruct\n0\n1\n94\n\n\nCMSC257\n44806\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\n\nHybrid-synchronous instruction\n0\n1\n44\n\n\nCMSC302\n23252\nINTRO TO DISCRETE STRUCTURES\nLEC\nBudwell,Caroline\n\nOnline-asynchronous instruct\n0\n1\n75\n\n\nCMSC302\n39169\nINTRO TO DISCRETE STRUCTURES\nLEC\nBudwell,Caroline\n\nFace-to-Face instruction\n0\n1\n58\n\n\nCMSC303\n36127\nINTRO TO THEORY OF CMPUTATION\nLEC\nCranston,Daniel\n\nFace-to-Face instruction\n1\n1\n119\n\n\nCMSC311\n36126\nCOMPUTER ORGANIZATION\nLEC\nSparks,Claire\n\nFace-to-Face instruction\n1\n1\n131\n\n\nCMSC312\n11731\nINTRO TO OPERATING SYSTEMS\nLEC\nNishi,Manziba\n\nFace-to-Face instruction\n1\n1\n42\n\n\nCMSC320\n40553\nSOFTWARE ENGINEERING & WEB DEV\nLEC\nBuffkin,Jonathan\nDuke,Debra\nOnline-asynchronous instruct\n1\n1\n37\n\n\nCMSC330\n40554\nDATA SCIENCE SKILLS\nLEC\nByram,Abigail\nDuke,Debra\nOnline-asynchronous instruct\n1\n1\n29\n\n\nCMSC340\n40555\nCYBERSECURITY SKILLS\nLEC\nChaitankar,Vijender\nDuke,Debra\nOnline-asynchronous instruct\n1\n1\n54\n\n\nCMSC355\n11732\nFUNDAMENTALS SOFTWARE ENGINEER\nLEC\nSpinola,Rodrigo\n\nFace-to-Face instruction\n1\n1\n87\n\n\nCMSC391\n46263\nTOP:INTRO TO GAME DEVELOPMENT\nLEC\nLeonard,John\nBennett,Jason\nFace-to-Face instruction\n1\n1\n20\n\n\nCMSC401\n34456\nALGORITHM ANL W/ADV DATA STRUC\nLEC\nBulut,Eyuphan\n\nFace-to-Face instruction\n1\n1\n157\n\n\nCMSC403\n36700\nPROGRAMMING LANGUAGES\nLEC\nGusukuma,Luke\n\nFace-to-Face instruction\n1\n1\n80\n\n\nCMSC409\n27851\nARTIFICIAL INTELLIGENCE\nLEC\nManic,Milos\n\nFace-to-Face instruction\n1\n1\n27\n\n\nCMSC413\n39167\nINTRO TO CYBERSECURITY\nLEC\nLuo,Changqing\n\nFace-to-Face instruction\n1\n1\n25\n\n\nCMSC415\n34458\nINTRO TO CRYPTOGRAPHY\nLEC\nZhou,Hongsheng\n\nFace-to-Face instruction\n1\n1\n16\n\n\nCMSC435\n36116\nINTRODUCTION TO DATA SCIENCE\nLEC\nKurgan,Lukasz\n\nFace-to-Face instruction\n1\n1\n47\n\n\nCMSC440\n46652\nDATA COMMUNCATION & NETWORKING\nLEC\nLee,Aaron\n\nOnline-asynchronous instruct\n1\n1\n22\n\n\nCMSC441\n43748\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBudwell,Caroline\n\nOnline-asynchronous instruct\n0\n1\n4\n\n\nCMSC441\n43749\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDamevski,Kostadin\n\nOnline-asynchronous instruct\n0\n1\n8\n\n\nCMSC441\n43750\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGhosh,Preetam\n\nOnline-asynchronous instruct\n0\n1\n8\n\n\nCMSC441\n43751\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGill,Satinder\n\nOnline-asynchronous instruct\n0\n1\n12\n\n\nCMSC441\n43758\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nThomson-McInnes,Bridget\n\nOnline-asynchronous instruct\n0\n1\n7\n\n\nCMSC441\n43760\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nArodz,Tomasz\n\nOnline-asynchronous instruct\n0\n1\n6\n\n\nCMSC441\n43761\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCano Rojas,Alberto\n\nOnline-asynchronous instruct\n0\n1\n5\n\n\nCMSC441\n43762\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLuo,Changqing\n\nOnline-asynchronous instruct\n0\n1\n4\n\n\nCMSC441\n43764\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nAhmed,Irfan\n\nOnline-asynchronous instruct\n0\n1\n4\n\n\nCMSC441\n43766\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCranston,Daniel\n\nOnline-asynchronous instruct\n0\n1\n6\n\n\nCMSC441\n43769\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDinh,Thang\n\nOnline-asynchronous instruct\n0\n1\n9\n\n\nCMSC441\n43770\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBulut,Eyuphan\n\nOnline-asynchronous instruct\n0\n1\n5\n\n\nCMSC441\n43771\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nManic,Milos\n\nOnline-asynchronous instruct\n0\n1\n8\n\n\nCMSC441\n43773\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nKurgan,Lukasz\n\nOnline-asynchronous instruct\n0\n1\n7\n\n\nCMSC441\n43780\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLeonard,John\n\nOnline-asynchronous instruct\n0\n1\n20\n\n\nCMSC441\n43782\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nNadeem,Tamer\n\nOnline-asynchronous instruct\n0\n1\n19\n\n\nCMSC441\n43783\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nZhou,Hongsheng\n\nOnline-asynchronous instruct\n0\n1\n4\n\n\nCMSC441\n43784\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGusukuma,Luke\n\nOnline-asynchronous instruct\n0\n1\n3\n\n\nCMSC441\n43786\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nSpinola,Rodrigo\n\nOnline-asynchronous instruct\n0\n1\n9\n\n\nCMSC441\n44349\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDahlberg,Robert\n\nOnline-asynchronous instruct\n0\n1\n13\n\n\nCMSC451\n43785\nSENIOR PROJECT I\nLEC\nDahlberg,Robert\n\nFace-to-Face instruction\n1\n1\n161\n\n\nCMSC455\n40828\nSOFTWARE AS A SERVICE\nLEC\nDamevski,Kostadin\n\nFace-to-Face instruction\n1\n1\n94\n\n\nCMSC491\n45897\nSP: MACHINE LEARNING\nLEC\nArodz,Tomasz\n\nFace-to-Face instruction\n0\n1\n15\n\n\nCMSC492\n47095\nINDEPENDENT STUDY\nIND\nThomson-McInnes,Bridget\n\nDirected Instruction\n1\n1\n1\n\n\nCMSC501\n39781\nADVANCED ALGORITHMS\nLEC\nDinh,Thang\n\nFace-to-Face instruction\n0\n1\n22\n\n\nCMSC502\n37708\nPARALLEL ALGORITHMS\nLEC\nGhosh,Preetam\n\nFace-to-Face instruction\n0\n1\n10\n\n\nCMSC502\n37709\nPARALLEL ALGORITHMS\nLEC\nGhosh,Preetam\n\nOnline-synchronous instruction\n0\n1\n1\n\n\nCMSC508\n36125\nDATA BASE THEORY\nLEC\nLeonard,John\n\nFace-to-Face instruction\n1\n1\n133\n\n\nCMSC603\n36113\nHIGH PERF. DISTRIB. SYSTEMS\nLEC\nCano Rojas,Alberto\n\nFace-to-Face instruction\n1\n1\n20\n\n\nCMSC654\n42291\nMEMORY AND MALWARE FORENSICS\nLEC\nAhmed,Irfan\n\nFace-to-Face instruction\n0\n1\n13\n\n\nCMSC691\n45416\nST: INTRO TO MACHINE LEARNING\nLEC\nArodz,Tomasz\n\nFace-to-Face instruction\n0\n1\n40\n\n\nCMSC691\n45871\nSP:EMERGE TRENDS NAT LANG PROC\nLEC\nThomson-McInnes,Bridget\n\nFace-to-Face instruction\n0\n1\n15\n\n\nCMSC691\n46851\nSP TOP:AI FOR NETWRK &EDGE SYS\nLEC\nNadeem,Tamer\n\nFace-to-Face instruction\n0\n1\n9\n\n\nCMSC697\n37336\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\n\nDirected Instruction\n0\n1\n3\n\n\nCMSC697\n37337\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n37338\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37339\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n37341\nDIRECTED RESEARCH\nRES\nCano Rojas,Alberto\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37361\nDIRECTED RESEARCH\nRES\nDamevski,Kostadin\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37384\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n37385\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37386\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n37403\nDIRECTED RESEARCH\nRES\nNadeem,Tamer\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37407\nDIRECTED RESEARCH\nRES\nNadeem,Tamer\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37409\nDIRECTED RESEARCH\nRES\nManic,Milos\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n37410\nDIRECTED RESEARCH\nRES\nManic,Milos\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37411\nDIRECTED RESEARCH\nRES\nManic,Milos\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37414\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n37415\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n38685\nDIRECTED RESEARCH\nRES\nLuo,Changqing\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n38686\nDIRECTED RESEARCH\nRES\nLuo,Changqing\n\nDirected Instruction\n0\n1\n3\n\n\nCMSC697\n38688\nDIRECTED RESEARCH\nRES\nLuo,Changqing\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n38693\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\n\nDirected Instruction\n0\n1\n2\n\n\nCMSC697\n38695\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n45106\nDIRECTED RESEARCH\nRES\nCranston,Daniel\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n45197\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n46781\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\n\nDirected Instruction\n0\n1\n4\n\n\nCMSC697\n46807\nDIRECTED RESEARCH\nRES\nSpinola,Rodrigo\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n46810\nDIRECTED RESEARCH\nRES\nCranston,Daniel\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n46864\nDIRECTED RESEARCH\nRES\nDamevski,Kostadin\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC697\n46976\nDIRECTED RESEARCH\nRES\nKurgan,Lukasz\n\nDirected Instruction\n0\n1\n1\n\n\nCMSC702\n40185\nCOMPUTER SCIENCE SEMINAR\nSEM\nThomson-McInnes,Bridget\n\nFace-to-Face instruction\n1\n1\n18\n\n\n\n\n\n\n\nFall 2023 Pivot of course\n\n\nstacked_df = pd.melt(summary_df,id_vars=['COURSE', 'CRN', 'TITLE', 'TYPE','MODALITY TEXT',\n       'sum_term_crse', 'sum_term_crse_crn', 'sum_term_crse_crn_students'],value_vars=['instructor_1','instructor_2'],var_name='ins_type',value_name='instructor')\nstacked_df = stacked_df[ ~ ((stacked_df['ins_type']=='instructor_2') & (stacked_df['instructor']=='')) ]\nstacked_df = stacked_df.drop(columns=['ins_type'])\n\nstacked_df = stacked_df[['COURSE', 'CRN', 'TITLE', 'instructor','MODALITY TEXT','TYPE', 'sum_term_crse', 'sum_term_crse_crn','sum_term_crse_crn_students']]\nstacked_df = stacked_df.sort_values(by=['COURSE','instructor'])\n\nMarkdown(tabulate(\n  stacked_df, \n#  headers=['Dept','Course Sum','CRN Sum','Student Sum'],\n  numalign=\"right\",stralign=\"left\",\n  showindex=False,\n  floatfmt=\".0f\"  # Format numbers without decimals\n))\n\n\n\n\nCMSC210\n40552\nCOMPUTERS AND PROGRAMMING\nDuke,Debra\nOnline-asynchronous instruct\nLEC\n0\n1\n99\n\n\nCMSC210\n42083\nCOMPUTERS AND PROGRAMMING\nDuke,Debra\nOnline-asynchronous instruct\nLEC\n0\n1\n78\n\n\nCMSC235\n46194\nCOMPUTING AND DATA ETHICS\nChaitankar,Vijender\nOnline-synchronous instruction\nLEC\n1\n1\n390\n\n\nCMSC254\n46793\nINTRO TO PROBLEM-SOLVING\nBudwell,Caroline\nFace-to-Face instruction\nLEC\n0\n1\n40\n\n\nCMSC254\n43736\nINTRO TO PROBLEM-SOLVING\nGusukuma,Luke\nFace-to-Face instruction\nLEC\n0\n1\n40\n\n\nCMSC254\n44838\nINTRO TO PROBLEM-SOLVING\nSands,Allison\nFace-to-Face instruction\nLEC\n0\n1\n39\n\n\nCMSC254\n46878\nINTRO TO PROBLEM-SOLVING\nTraub,Adam\nFace-to-Face instruction\nLEC\n0\n1\n39\n\n\nCMSC255\n37573\nINTRODUCTION TO PROGRAMMING\nGrove,Ralph\nHybrid-synchronous instruction\nLEC\n0\n1\n46\n\n\nCMSC255\n43404\nINTRODUCTION TO PROGRAMMING\nGusukuma,Luke\nFace-to-Face instruction\nLEC\n0\n1\n56\n\n\nCMSC255\n41688\nINTRODUCTION TO PROGRAMMING\nSparks,Claire\nOnline-asynchronous instruct\nLEC\n0\n1\n25\n\n\nCMSC255\n45869\nINTRODUCTION TO PROGRAMMING\nSparks,Claire\nHybrid-synchronous instruction\nLEC\n0\n1\n80\n\n\nCMSC256\n36067\nDATA STRUCTURE & OBJECT PROG\nDuke,Debra\nHybrid-synchronous instruction\nLEC\n0\n1\n83\n\n\nCMSC256\n41689\nDATA STRUCTURE & OBJECT PROG\nDuke,Debra\nOnline-synchronous instruction\nLEC\n0\n1\n31\n\n\nCMSC257\n34519\nCOMPUTER SYSTEMS\nSonmez,Ahmet\nHybrid-synchronous instruction\nLEC\n0\n1\n37\n\n\nCMSC257\n41690\nCOMPUTER SYSTEMS\nSonmez,Ahmet\nOnline-asynchronous instruct\nLEC\n0\n1\n94\n\n\nCMSC257\n44806\nCOMPUTER SYSTEMS\nSonmez,Ahmet\nHybrid-synchronous instruction\nLEC\n0\n1\n44\n\n\nCMSC302\n23252\nINTRO TO DISCRETE STRUCTURES\nBudwell,Caroline\nOnline-asynchronous instruct\nLEC\n0\n1\n75\n\n\nCMSC302\n39169\nINTRO TO DISCRETE STRUCTURES\nBudwell,Caroline\nFace-to-Face instruction\nLEC\n0\n1\n58\n\n\nCMSC303\n36127\nINTRO TO THEORY OF CMPUTATION\nCranston,Daniel\nFace-to-Face instruction\nLEC\n1\n1\n119\n\n\nCMSC311\n36126\nCOMPUTER ORGANIZATION\nSparks,Claire\nFace-to-Face instruction\nLEC\n1\n1\n131\n\n\nCMSC312\n11731\nINTRO TO OPERATING SYSTEMS\nNishi,Manziba\nFace-to-Face instruction\nLEC\n1\n1\n42\n\n\nCMSC320\n40553\nSOFTWARE ENGINEERING & WEB DEV\nBuffkin,Jonathan\nOnline-asynchronous instruct\nLEC\n1\n1\n37\n\n\nCMSC320\n40553\nSOFTWARE ENGINEERING & WEB DEV\nDuke,Debra\nOnline-asynchronous instruct\nLEC\n1\n1\n37\n\n\nCMSC330\n40554\nDATA SCIENCE SKILLS\nByram,Abigail\nOnline-asynchronous instruct\nLEC\n1\n1\n29\n\n\nCMSC330\n40554\nDATA SCIENCE SKILLS\nDuke,Debra\nOnline-asynchronous instruct\nLEC\n1\n1\n29\n\n\nCMSC340\n40555\nCYBERSECURITY SKILLS\nChaitankar,Vijender\nOnline-asynchronous instruct\nLEC\n1\n1\n54\n\n\nCMSC340\n40555\nCYBERSECURITY SKILLS\nDuke,Debra\nOnline-asynchronous instruct\nLEC\n1\n1\n54\n\n\nCMSC355\n11732\nFUNDAMENTALS SOFTWARE ENGINEER\nSpinola,Rodrigo\nFace-to-Face instruction\nLEC\n1\n1\n87\n\n\nCMSC391\n46263\nTOP:INTRO TO GAME DEVELOPMENT\nBennett,Jason\nFace-to-Face instruction\nLEC\n1\n1\n20\n\n\nCMSC391\n46263\nTOP:INTRO TO GAME DEVELOPMENT\nLeonard,John\nFace-to-Face instruction\nLEC\n1\n1\n20\n\n\nCMSC401\n34456\nALGORITHM ANL W/ADV DATA STRUC\nBulut,Eyuphan\nFace-to-Face instruction\nLEC\n1\n1\n157\n\n\nCMSC403\n36700\nPROGRAMMING LANGUAGES\nGusukuma,Luke\nFace-to-Face instruction\nLEC\n1\n1\n80\n\n\nCMSC409\n27851\nARTIFICIAL INTELLIGENCE\nManic,Milos\nFace-to-Face instruction\nLEC\n1\n1\n27\n\n\nCMSC413\n39167\nINTRO TO CYBERSECURITY\nLuo,Changqing\nFace-to-Face instruction\nLEC\n1\n1\n25\n\n\nCMSC415\n34458\nINTRO TO CRYPTOGRAPHY\nZhou,Hongsheng\nFace-to-Face instruction\nLEC\n1\n1\n16\n\n\nCMSC435\n36116\nINTRODUCTION TO DATA SCIENCE\nKurgan,Lukasz\nFace-to-Face instruction\nLEC\n1\n1\n47\n\n\nCMSC440\n46652\nDATA COMMUNCATION & NETWORKING\nLee,Aaron\nOnline-asynchronous instruct\nLEC\n1\n1\n22\n\n\nCMSC441\n43764\nSR DESIGN STUDIO I (LAB/PROJ)\nAhmed,Irfan\nOnline-asynchronous instruct\nLAB\n0\n1\n4\n\n\nCMSC441\n43760\nSR DESIGN STUDIO I (LAB/PROJ)\nArodz,Tomasz\nOnline-asynchronous instruct\nLAB\n0\n1\n6\n\n\nCMSC441\n43748\nSR DESIGN STUDIO I (LAB/PROJ)\nBudwell,Caroline\nOnline-asynchronous instruct\nLAB\n0\n1\n4\n\n\nCMSC441\n43770\nSR DESIGN STUDIO I (LAB/PROJ)\nBulut,Eyuphan\nOnline-asynchronous instruct\nLAB\n0\n1\n5\n\n\nCMSC441\n43761\nSR DESIGN STUDIO I (LAB/PROJ)\nCano Rojas,Alberto\nOnline-asynchronous instruct\nLAB\n0\n1\n5\n\n\nCMSC441\n43766\nSR DESIGN STUDIO I (LAB/PROJ)\nCranston,Daniel\nOnline-asynchronous instruct\nLAB\n0\n1\n6\n\n\nCMSC441\n44349\nSR DESIGN STUDIO I (LAB/PROJ)\nDahlberg,Robert\nOnline-asynchronous instruct\nLAB\n0\n1\n13\n\n\nCMSC441\n43749\nSR DESIGN STUDIO I (LAB/PROJ)\nDamevski,Kostadin\nOnline-asynchronous instruct\nLAB\n0\n1\n8\n\n\nCMSC441\n43769\nSR DESIGN STUDIO I (LAB/PROJ)\nDinh,Thang\nOnline-asynchronous instruct\nLAB\n0\n1\n9\n\n\nCMSC441\n43750\nSR DESIGN STUDIO I (LAB/PROJ)\nGhosh,Preetam\nOnline-asynchronous instruct\nLAB\n0\n1\n8\n\n\nCMSC441\n43751\nSR DESIGN STUDIO I (LAB/PROJ)\nGill,Satinder\nOnline-asynchronous instruct\nLAB\n0\n1\n12\n\n\nCMSC441\n43784\nSR DESIGN STUDIO I (LAB/PROJ)\nGusukuma,Luke\nOnline-asynchronous instruct\nLAB\n0\n1\n3\n\n\nCMSC441\n43773\nSR DESIGN STUDIO I (LAB/PROJ)\nKurgan,Lukasz\nOnline-asynchronous instruct\nLAB\n0\n1\n7\n\n\nCMSC441\n43780\nSR DESIGN STUDIO I (LAB/PROJ)\nLeonard,John\nOnline-asynchronous instruct\nLAB\n0\n1\n20\n\n\nCMSC441\n43762\nSR DESIGN STUDIO I (LAB/PROJ)\nLuo,Changqing\nOnline-asynchronous instruct\nLAB\n0\n1\n4\n\n\nCMSC441\n43771\nSR DESIGN STUDIO I (LAB/PROJ)\nManic,Milos\nOnline-asynchronous instruct\nLAB\n0\n1\n8\n\n\nCMSC441\n43782\nSR DESIGN STUDIO I (LAB/PROJ)\nNadeem,Tamer\nOnline-asynchronous instruct\nLAB\n0\n1\n19\n\n\nCMSC441\n43786\nSR DESIGN STUDIO I (LAB/PROJ)\nSpinola,Rodrigo\nOnline-asynchronous instruct\nLAB\n0\n1\n9\n\n\nCMSC441\n43758\nSR DESIGN STUDIO I (LAB/PROJ)\nThomson-McInnes,Bridget\nOnline-asynchronous instruct\nLAB\n0\n1\n7\n\n\nCMSC441\n43783\nSR DESIGN STUDIO I (LAB/PROJ)\nZhou,Hongsheng\nOnline-asynchronous instruct\nLAB\n0\n1\n4\n\n\nCMSC451\n43785\nSENIOR PROJECT I\nDahlberg,Robert\nFace-to-Face instruction\nLEC\n1\n1\n161\n\n\nCMSC455\n40828\nSOFTWARE AS A SERVICE\nDamevski,Kostadin\nFace-to-Face instruction\nLEC\n1\n1\n94\n\n\nCMSC491\n45897\nSP: MACHINE LEARNING\nArodz,Tomasz\nFace-to-Face instruction\nLEC\n0\n1\n15\n\n\nCMSC492\n47095\nINDEPENDENT STUDY\nThomson-McInnes,Bridget\nDirected Instruction\nIND\n1\n1\n1\n\n\nCMSC501\n39781\nADVANCED ALGORITHMS\nDinh,Thang\nFace-to-Face instruction\nLEC\n0\n1\n22\n\n\nCMSC502\n37708\nPARALLEL ALGORITHMS\nGhosh,Preetam\nFace-to-Face instruction\nLEC\n0\n1\n10\n\n\nCMSC502\n37709\nPARALLEL ALGORITHMS\nGhosh,Preetam\nOnline-synchronous instruction\nLEC\n0\n1\n1\n\n\nCMSC508\n36125\nDATA BASE THEORY\nLeonard,John\nFace-to-Face instruction\nLEC\n1\n1\n133\n\n\nCMSC603\n36113\nHIGH PERF. DISTRIB. SYSTEMS\nCano Rojas,Alberto\nFace-to-Face instruction\nLEC\n1\n1\n20\n\n\nCMSC654\n42291\nMEMORY AND MALWARE FORENSICS\nAhmed,Irfan\nFace-to-Face instruction\nLEC\n0\n1\n13\n\n\nCMSC691\n45416\nST: INTRO TO MACHINE LEARNING\nArodz,Tomasz\nFace-to-Face instruction\nLEC\n0\n1\n40\n\n\nCMSC691\n46851\nSP TOP:AI FOR NETWRK &EDGE SYS\nNadeem,Tamer\nFace-to-Face instruction\nLEC\n0\n1\n9\n\n\nCMSC691\n45871\nSP:EMERGE TRENDS NAT LANG PROC\nThomson-McInnes,Bridget\nFace-to-Face instruction\nLEC\n0\n1\n15\n\n\nCMSC697\n38693\nDIRECTED RESEARCH\nAhmed,Irfan\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n38695\nDIRECTED RESEARCH\nAhmed,Irfan\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n46781\nDIRECTED RESEARCH\nAhmed,Irfan\nDirected Instruction\nRES\n0\n1\n4\n\n\nCMSC697\n37336\nDIRECTED RESEARCH\nBulut,Eyuphan\nDirected Instruction\nRES\n0\n1\n3\n\n\nCMSC697\n37337\nDIRECTED RESEARCH\nBulut,Eyuphan\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n37338\nDIRECTED RESEARCH\nBulut,Eyuphan\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37339\nDIRECTED RESEARCH\nBulut,Eyuphan\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n37341\nDIRECTED RESEARCH\nCano Rojas,Alberto\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n45106\nDIRECTED RESEARCH\nCranston,Daniel\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n46810\nDIRECTED RESEARCH\nCranston,Daniel\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37361\nDIRECTED RESEARCH\nDamevski,Kostadin\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n46864\nDIRECTED RESEARCH\nDamevski,Kostadin\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37384\nDIRECTED RESEARCH\nGhosh,Preetam\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n37385\nDIRECTED RESEARCH\nGhosh,Preetam\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37386\nDIRECTED RESEARCH\nGhosh,Preetam\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n46976\nDIRECTED RESEARCH\nKurgan,Lukasz\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n38685\nDIRECTED RESEARCH\nLuo,Changqing\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n38686\nDIRECTED RESEARCH\nLuo,Changqing\nDirected Instruction\nRES\n0\n1\n3\n\n\nCMSC697\n38688\nDIRECTED RESEARCH\nLuo,Changqing\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n37409\nDIRECTED RESEARCH\nManic,Milos\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n37410\nDIRECTED RESEARCH\nManic,Milos\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37411\nDIRECTED RESEARCH\nManic,Milos\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37403\nDIRECTED RESEARCH\nNadeem,Tamer\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37407\nDIRECTED RESEARCH\nNadeem,Tamer\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n46807\nDIRECTED RESEARCH\nSpinola,Rodrigo\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37414\nDIRECTED RESEARCH\nThomson-McInnes,Bridget\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC697\n37415\nDIRECTED RESEARCH\nThomson-McInnes,Bridget\nDirected Instruction\nRES\n0\n1\n2\n\n\nCMSC697\n45197\nDIRECTED RESEARCH\nThomson-McInnes,Bridget\nDirected Instruction\nRES\n0\n1\n1\n\n\nCMSC702\n40185\nCOMPUTER SCIENCE SEMINAR\nThomson-McInnes,Bridget\nFace-to-Face instruction\nSEM\n1\n1\n18"
  },
  {
    "objectID": "clean.html#data-sources",
    "href": "clean.html#data-sources",
    "title": "Data and Data Cleaning",
    "section": "Data sources",
    "text": "Data sources\nData were pulled from the VCU Reporting Center in the Staff | Course Schedule Report as shown below:\nReports are run by semester for the College of Engineering and stored in separate files. Care should be taken to open each file after it’s been saved and RESAVE the file into XLSX format.\n\n\n\n\n\n\n\n\n\n\nThe files are named appropriately and stored in the data folder in this repository.\n\n\n\n\n\nFile name\nTerm Code\nAcad Year\nPeriod Code\nPeriod Name\n\n\n\n\nVCU-SOC-202110-FA2020.xlsx\n202110\nAY20-21\nFA2020\nFall 2020\n\n\nVCU-SOC-202120-SP2021.xlsx\n202120\nAY20-21\nSP2021\nSpring 2021\n\n\nVCU-SOC-202130-SU2021.xlsx\n202130\nAY20-21\nSU2021\nSummer 2021\n\n\nVCU-SOC-202210-FA2021.xlsx\n202210\nAY21-22\nFA2021\nFall 2021\n\n\nVCU-SOC-202220-SP2022.xlsx\n202220\nAY21-22\nSP2022\nSpring 2022\n\n\nVCU-SOC-202230-SU2022.xlsx\n202230\nAY21-22\nSU2022\nSummer 2022\n\n\nVCU-SOC-202310-FA2022.xlsx\n202310\nAY22-23\nFA2022\nFall 2022\n\n\nVCU-SOC-202320-SP2023.xlsx\n202320\nAY22-23\nSP2023\nSpring 2023\n\n\nVCU-SOC-202330-SU2023.xlsx\n202330\nAY22-23\nSU2023\nSummer 2023\n\n\nVCU-SOC-202410-FA2023.xlsx\n202410\nAY23-24\nFA2023\nFall 2023"
  },
  {
    "objectID": "clean.html#data-cleaning",
    "href": "clean.html#data-cleaning",
    "title": "Data and Data Cleaning",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nThe following sections combine the individual sources of data and clean them up.\n\nCombining to single data frame\nThe following section combines each XLSX into a single data frame. The contents of the files are variable in length depending on the number of sections taught during any given semester.\nThe appropriate block starts one row after the row with the keyword TERM in the first column, denoting the header row. The appropriate block ends with the row prior to the row with the keyword N =.\nWe’re assuming that all xlsx workbooks share the same columns and names.\nThe dataframe is stored to a CSV file named ‘final_df.csv’.\n\n# Initialize an empty list to store trimmed DataFrames\ntrimmed_dfs = []\n\n# Iterate through the list of XLSX file names\nfor file_name in xlsx_df['file_name']:\n    # Load the XLSX file into a DataFrame\n    full_path = os.path.join(directory_path, file_name)\n    df = pd.read_excel(full_path)\n    \n    # Find the row index where \"TERM\" is in the first column\n    term_index = df.index[df.iloc[:, 0] == \"TERM\"].tolist()[0]\n    \n    # Find the row index where \"N=\" is in the first column\n    n_index = df.index[df.iloc[:, 0].str.startswith(\"N =\").fillna(False)].tolist()[0]\n\n    # Clip the desired block and add column names\n    trimmed_df = df.loc[term_index + 1 : n_index - 1]\n    trimmed_df.columns = df.iloc[term_index].values\n\n    # Append the trimmed DataFrame to the list\n    trimmed_dfs.append(trimmed_df)\n\n# Combine the individual dataframes into one big one.\nsections_df = pd.concat(trimmed_dfs, ignore_index=True)\n\n# Merge in the term and period data from the xlsx_df dataframe\n\nsections_df['TERM'] = sections_df['TERM'].astype(str)\nxlsx_df['term_code'] = xlsx_df['term_code'].astype(str)\nsections_df = pd.merge(sections_df,xlsx_df,left_on='TERM', right_on='term_code', how='left')\n\n\n\nCompute appropriate aggregates\n\n# Create various aggregate columns\nsections_df['sum_term_crse_crn'] = 1.0 / sections_df.groupby(['TERM','COURSE','CRN'])['CRN'].transform('count')\nsections_df['sum_term_crse_crn_students'] = sections_df['ACTUAL ENROLLMENT'] * sections_df['sum_term_crse_crn']\nsections_df['sum_term_crse'] = 1.0 / sections_df.groupby(['TERM','COURSE'])['CRN'].transform('count')\nsections_df['sum_term'] = 1.0 / sections_df.groupby(['TERM'])['CRN'].transform('count')\n\n\n\nRecoding and creating new fields\n\nsections_df['ins1_last'] = sections_df['PRIMARY INSTRUCTOR LAST NAME']\nsections_df['ins1_first'] = sections_df['PRIMARY INSTRUCTOR FIRST NAME']\nsections_df['ins2_last'] = sections_df['SECONDARY INSTRUCTOR LAST NAME']\nsections_df['ins2_first'] = sections_df['SECONDARY INSTRUCTOR FIRST NAME']\nsections_df['instructor_1'] = sections_df['ins1_last']+','+sections_df['ins1_first']\nsections_df['instructor_2'] = sections_df['ins2_last']+','+sections_df['ins2_first']\nsections_df['instructor_1'].fillna('',inplace=True)\nsections_df['instructor_2'].fillna('',inplace=True)\n\n\n\nStore the data to disk for later use\n\n# Store as CSV file\nsections_df.to_csv('sections_df.csv', index=False)"
  }
]