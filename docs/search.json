[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "analysis of teaching",
    "section": "",
    "text": "This web report looks at teaching across the College of Engineering since Fall 2020."
  },
  {
    "objectID": "index.html#report-organization",
    "href": "index.html#report-organization",
    "title": "analysis of teaching",
    "section": "Report organization",
    "text": "Report organization\nThe site is organized as follow:\n\nDownload - this section describes the source of data (VCU reports) and shows the files and semesters downloaded. This section is provided so that others can obtain the same data used for this report.\nclean - this section documents the cleaning strategies applied to the data obtained above. This section refactors and reshapes the data, adds new columns and corrects known errors. The data are stored in this repo, and are also uploaded to this google sheet.\nexplore - this section offers several sample analysis using the cleaned data. This report is generated using python and matplotlib. The examples are offered only as examples not as part of a real workload analysis."
  },
  {
    "objectID": "index.html#persistent-data",
    "href": "index.html#persistent-data",
    "title": "analysis of teaching",
    "section": "Persistent data",
    "text": "Persistent data\nThe analysis also expect that there are persistent data stored outside of the VCU report, data that is important for helping classify faculty and courses.\nInstructor data - these data provide instructor departments and instructor roles, and an instructor workload designation. This table is necessary for the analysis.\nInstructor notes - these data offer additional details about instructors. It is expected that these data might be incorporated into a subsequent workload report. This table is optional to this analysis.\nCourse notes - these data offer additional details about the courses. This table is optional to this analysis."
  },
  {
    "objectID": "30_explore.html",
    "href": "30_explore.html",
    "title": "Exploring the data",
    "section": "",
    "text": "For this analysis weâ€™ll be using the stacked_df data frame from the cleaning process."
  },
  {
    "objectID": "30_explore.html#columns-in-the-dataframe",
    "href": "30_explore.html#columns-in-the-dataframe",
    "title": "Exploring the data",
    "section": "Columns in the dataframe",
    "text": "Columns in the dataframe\n\n\nIndex(['TERM', 'PART_OF_TERM', 'COLLEGE', 'DEPT', 'COURSE', 'SECT', 'CRN',\n       'TYPE', 'MIN CREDITS', 'MAX CREDITS', 'TITLE', 'CROSS-LIST', 'MAX SIZE',\n       'ACTUAL ENROLLMENT', 'WAITLIST MAX', 'WAITLIST ACTUAL', 'START DATE',\n       'END DATE', 'MON-IND', 'TUE-IND', 'WED-IND', 'THU-IND', 'FRI-IND',\n       'SAT-IND', 'SUN-IND', 'BEGIN TIME', 'END TIME', 'BUILDING', 'ROOM',\n       'MODALITY CODE', 'MODALITY TEXT', 'CROSS_LIST_MAXIMUM_ENROLLMENT',\n       'CROSS_LIST_ENROLLMENT', 'file_name', 'term_code', 'academic_year',\n       'period_code', 'period_name', 'fixes', 'fix_notes', 'instructor source',\n       'instructor', 'course_subject', 'course_number', 'ins_college',\n       'ins_dept', 'ins_role', 'ins_wrkld', 'ins_url_vcu', 'ins_url_linkedin',\n       'ins_url_google_scholar', 'ins_note1', 'crse', 'crse_with_url',\n       'crse_note', 'meeting_code', 'meeting_id', 'mtgs_per_wk', 'sum_term',\n       'sum_term_crse', 'sum_term_crse_crn', 'sum_term_crse_crn_students',\n       'sum_term_crse_crn_hours', 'sum_term_crse_wrkld_sample',\n       'sum_term_crse_wrkld_a', 'sum_term_crse_wrkld_b',\n       'sum_term_crse_wrkld_c'],\n      dtype='object')"
  },
  {
    "objectID": "30_explore.html#college-wide-measures-over-time",
    "href": "30_explore.html#college-wide-measures-over-time",
    "title": "Exploring the data",
    "section": "College-wide measures over time",
    "text": "College-wide measures over time\nThis table presents a summary of courses (e.g., CMSC 255, CMSC 355, etc.), sections (or CRN), and student enrollments by semester in our data file.\n\n\n\n\n\nTerm\nTerm Name\nCourse Sum\nCRN Sum\nStudent Sum\nHours Sum\n\n\n\n\n202110\nFall 2020\n149\n419\n5713\n16353\n\n\n202120\nSpring 2021\n137\n445\n5639\n16518\n\n\n202130\nSummer 2021\n25\n112\n578\n1444\n\n\n202210\nFall 2021\n154\n425\n5883\n16689\n\n\n202220\nSpring 2022\n146\n449\n5762\n16801\n\n\n202230\nSummer 2022\n29\n107\n564\n1343\n\n\n202310\nFall 2022\n159\n438\n6564\n18396\n\n\n202320\nSpring 2023\n146\n458\n6233\n17790\n\n\n202330\nSummer 2023\n25\n104\n512\n1213\n\n\n202410\nFall 2023\n157\n452\n7545\n21298"
  },
  {
    "objectID": "30_explore.html#teaching-for-fall-2023-by-department",
    "href": "30_explore.html#teaching-for-fall-2023-by-department",
    "title": "Exploring the data",
    "section": "Teaching for Fall 2023 by department",
    "text": "Teaching for Fall 2023 by department\n\n\n\n\n\nDept\nCourse Sum\nCRN Sum\nStudent Sum\nHours Sum\n\n\n\n\nCMSC\n35\n95\n3017\n9235\n\n\nEGRB\n31\n65\n707\n2287\n\n\nEGRC\n14\n40\n341\n1021\n\n\nEGRE\n32\n70\n794\n2803\n\n\nEGRM\n32\n103\n1870\n4925\n\n\nENGR\n13\n79\n816\n1027"
  },
  {
    "objectID": "30_explore.html#fall-2023-cmsc-courses",
    "href": "30_explore.html#fall-2023-cmsc-courses",
    "title": "Exploring the data",
    "section": "Fall 2023 CMSC Courses",
    "text": "Fall 2023 CMSC Courses\n\n\n\n\n\nCOURSE\nCRN\nTITLE\nTYPE\ninstructor\nMODALITY TEXT\nCRSE sum\nCRN sum\nSTDNTS sum\nHRS sum\n\n\n\n\nCMSC210\n40552\nCOMPUTERS AND PROGRAMMING\nLEC\nDuke,Debra\nOnline-asynchronous instruct\n0.5\n1\n99\n297\n\n\nCMSC210\n42083\nCOMPUTERS AND PROGRAMMING\nLEC\nDuke,Debra\nOnline-asynchronous instruct\n0.5\n1\n78\n234\n\n\nCMSC235\n46194\nCOMPUTING AND DATA ETHICS\nLEC\nChaitankar,Vijender\nOnline-synchronous instruction\n1\n1\n390\n1170\n\n\nCMSC254\n43736\nINTRO TO PROBLEM-SOLVING\nLAB\nGusukuma,Luke\nFace-to-Face instruction\n0.125\n0.5\n20\n80\n\n\nCMSC254\n43736\nINTRO TO PROBLEM-SOLVING\nLEC\nGusukuma,Luke\nFace-to-Face instruction\n0.125\n0.5\n20\n80\n\n\nCMSC254\n44838\nINTRO TO PROBLEM-SOLVING\nLAB\nSands,Allison\nFace-to-Face instruction\n0.125\n0.5\n19.5\n78\n\n\nCMSC254\n44838\nINTRO TO PROBLEM-SOLVING\nLEC\nSands,Allison\nFace-to-Face instruction\n0.125\n0.5\n19.5\n78\n\n\nCMSC254\n46793\nINTRO TO PROBLEM-SOLVING\nLAB\nBudwell,Caroline\nFace-to-Face instruction\n0.125\n0.5\n20\n80\n\n\nCMSC254\n46793\nINTRO TO PROBLEM-SOLVING\nLEC\nBudwell,Caroline\nFace-to-Face instruction\n0.125\n0.5\n20\n80\n\n\nCMSC254\n46878\nINTRO TO PROBLEM-SOLVING\nLAB\nTraub,Adam\nFace-to-Face instruction\n0.125\n0.5\n19.5\n78\n\n\nCMSC254\n46878\nINTRO TO PROBLEM-SOLVING\nLEC\nTraub,Adam\nFace-to-Face instruction\n0.125\n0.5\n19.5\n78\n\n\nCMSC255\n37573\nINTRODUCTION TO PROGRAMMING\nLAB\nGrove,Ralph\nHybrid-synchronous instruction\n0.142857\n0.5\n23\n92\n\n\nCMSC255\n37573\nINTRODUCTION TO PROGRAMMING\nLEC\nGrove,Ralph\nHybrid-synchronous instruction\n0.142857\n0.5\n23\n92\n\n\nCMSC255\n41688\nINTRODUCTION TO PROGRAMMING\nLEC\nSparks,Claire\nOnline-asynchronous instruct\n0.142857\n1\n25\n100\n\n\nCMSC255\n43404\nINTRODUCTION TO PROGRAMMING\nLAB\nGusukuma,Luke\nFace-to-Face instruction\n0.142857\n0.5\n28\n112\n\n\nCMSC255\n43404\nINTRODUCTION TO PROGRAMMING\nLEC\nGusukuma,Luke\nFace-to-Face instruction\n0.142857\n0.5\n28\n112\n\n\nCMSC255\n45869\nINTRODUCTION TO PROGRAMMING\nLAB\nSparks,Claire\nHybrid-synchronous instruction\n0.142857\n0.5\n40\n160\n\n\nCMSC255\n45869\nINTRODUCTION TO PROGRAMMING\nLEC\nSparks,Claire\nHybrid-synchronous instruction\n0.142857\n0.5\n40\n160\n\n\nCMSC256\n36067\nDATA STRUCTURE & OBJECT PROG\nLAB\nDuke,Debra\nHybrid-synchronous instruction\n0.25\n0.5\n41.5\n166\n\n\nCMSC256\n36067\nDATA STRUCTURE & OBJECT PROG\nLEC\nDuke,Debra\nHybrid-synchronous instruction\n0.25\n0.5\n41.5\n166\n\n\nCMSC256\n41689\nDATA STRUCTURE & OBJECT PROG\nLAB\nDuke,Debra\nOnline-synchronous instruction\n0.25\n0.5\n15.5\n62\n\n\nCMSC256\n41689\nDATA STRUCTURE & OBJECT PROG\nLEC\nDuke,Debra\nOnline-synchronous instruction\n0.25\n0.5\n15.5\n62\n\n\nCMSC257\n34519\nCOMPUTER SYSTEMS\nLAB\nSonmez,Ahmet\nHybrid-synchronous instruction\n0.2\n0.5\n18.5\n74\n\n\nCMSC257\n34519\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\nHybrid-synchronous instruction\n0.2\n0.5\n18.5\n74\n\n\nCMSC257\n41690\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\nOnline-asynchronous instruct\n0.2\n1\n94\n376\n\n\nCMSC257\n44806\nCOMPUTER SYSTEMS\nLAB\nSonmez,Ahmet\nHybrid-synchronous instruction\n0.2\n0.5\n22\n88\n\n\nCMSC257\n44806\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\nHybrid-synchronous instruction\n0.2\n0.5\n22\n88\n\n\nCMSC302\n23252\nINTRO TO DISCRETE STRUCTURES\nLEC\nBudwell,Caroline\nOnline-asynchronous instruct\n0.5\n1\n75\n225\n\n\nCMSC302\n39169\nINTRO TO DISCRETE STRUCTURES\nLEC\nBudwell,Caroline\nFace-to-Face instruction\n0.5\n1\n58\n174\n\n\nCMSC303\n36127\nINTRO TO THEORY OF CMPUTATION\nLEC\nCranston,Daniel\nFace-to-Face instruction\n1\n1\n119\n357\n\n\nCMSC311\n36126\nCOMPUTER ORGANIZATION\nLEC\nSparks,Claire\nFace-to-Face instruction\n1\n1\n131\n393\n\n\nCMSC312\n11731\nINTRO TO OPERATING SYSTEMS\nLEC\nNishi,Manziba\nFace-to-Face instruction\n1\n1\n42\n126\n\n\nCMSC320\n40553\nSOFTWARE ENGINEERING & WEB DEV\nLEC\nBuffkin,Jonathan\nOnline-asynchronous instruct\n0.5\n0.5\n18.5\n55.5\n\n\nCMSC320\n40553\nSOFTWARE ENGINEERING & WEB DEV\nLEC\nDuke,Debra\nOnline-asynchronous instruct\n0.5\n0.5\n18.5\n55.5\n\n\nCMSC330\n40554\nDATA SCIENCE SKILLS\nLEC\nByram,Abigail\nOnline-asynchronous instruct\n0.5\n0.5\n14.5\n43.5\n\n\nCMSC330\n40554\nDATA SCIENCE SKILLS\nLEC\nDuke,Debra\nOnline-asynchronous instruct\n0.5\n0.5\n14.5\n43.5\n\n\nCMSC340\n40555\nCYBERSECURITY SKILLS\nLEC\nChaitankar,Vijender\nOnline-asynchronous instruct\n0.5\n0.5\n27\n81\n\n\nCMSC340\n40555\nCYBERSECURITY SKILLS\nLEC\nDuke,Debra\nOnline-asynchronous instruct\n0.5\n0.5\n27\n81\n\n\nCMSC355\n11732\nFUNDAMENTALS SOFTWARE ENGINEER\nLEC\nSpinola,Rodrigo\nFace-to-Face instruction\n1\n1\n87\n261\n\n\nCMSC391\n46263\nTOP:INTRO TO GAME DEVELOPMENT\nLEC\nBennett,Jason\nFace-to-Face instruction\n0.5\n0.5\n17\n51\n\n\nCMSC391\n46263\nTOP:INTRO TO GAME DEVELOPMENT\nLEC\nLeonard,John\nFace-to-Face instruction\n0.5\n0.5\n17\n51\n\n\nCMSC401\n34456\nALGORITHM ANL W/ADV DATA STRUC\nLEC\nBulut,Eyuphan\nFace-to-Face instruction\n1\n1\n157\n471\n\n\nCMSC403\n36700\nPROGRAMMING LANGUAGES\nLEC\nGusukuma,Luke\nFace-to-Face instruction\n1\n1\n80\n240\n\n\nCMSC409\n27851\nARTIFICIAL INTELLIGENCE\nLEC\nManic,Milos\nFace-to-Face instruction\n1\n1\n27\n81\n\n\nCMSC413\n39167\nINTRO TO CYBERSECURITY\nLEC\nLuo,Changqing\nFace-to-Face instruction\n1\n1\n25\n75\n\n\nCMSC415\n34458\nINTRO TO CRYPTOGRAPHY\nLEC\nZhou,Hongsheng\nFace-to-Face instruction\n1\n1\n16\n48\n\n\nCMSC435\n36116\nINTRODUCTION TO DATA SCIENCE\nLEC\nKurgan,Lukasz\nFace-to-Face instruction\n1\n1\n47\n141\n\n\nCMSC440\n46652\nDATA COMMUNCATION & NETWORKING\nLEC\nLee,Aaron\nOnline-asynchronous instruct\n1\n1\n22\n66\n\n\nCMSC441\n43748\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBudwell,Caroline\nOnline-asynchronous instruct\n0.05\n1\n4\n8\n\n\nCMSC441\n43749\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDamevski,Kostadin\nOnline-asynchronous instruct\n0.05\n1\n8\n16\n\n\nCMSC441\n43750\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGhosh,Preetam\nOnline-asynchronous instruct\n0.05\n1\n8\n16\n\n\nCMSC441\n43751\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGill,Satinder\nOnline-asynchronous instruct\n0.05\n1\n12\n24\n\n\nCMSC441\n43758\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nThomson-McInnes,Bridget\nOnline-asynchronous instruct\n0.05\n1\n7\n14\n\n\nCMSC441\n43760\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nArodz,Tomasz\nOnline-asynchronous instruct\n0.05\n1\n6\n12\n\n\nCMSC441\n43761\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCano Rojas,Alberto\nOnline-asynchronous instruct\n0.05\n1\n5\n10\n\n\nCMSC441\n43762\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLuo,Changqing\nOnline-asynchronous instruct\n0.05\n1\n4\n8\n\n\nCMSC441\n43764\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nAhmed,Irfan\nOnline-asynchronous instruct\n0.05\n1\n4\n8\n\n\nCMSC441\n43766\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCranston,Daniel\nOnline-asynchronous instruct\n0.05\n1\n6\n12\n\n\nCMSC441\n43769\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDinh,Thang\nOnline-asynchronous instruct\n0.05\n1\n9\n18\n\n\nCMSC441\n43770\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBulut,Eyuphan\nOnline-asynchronous instruct\n0.05\n1\n5\n10\n\n\nCMSC441\n43771\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nManic,Milos\nOnline-asynchronous instruct\n0.05\n1\n8\n16\n\n\nCMSC441\n43773\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nKurgan,Lukasz\nOnline-asynchronous instruct\n0.05\n1\n7\n14\n\n\nCMSC441\n43780\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLeonard,John\nOnline-asynchronous instruct\n0.05\n1\n20\n40\n\n\nCMSC441\n43782\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nNadeem,Tamer\nOnline-asynchronous instruct\n0.05\n1\n19\n38\n\n\nCMSC441\n43783\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nZhou,Hongsheng\nOnline-asynchronous instruct\n0.05\n1\n4\n8\n\n\nCMSC441\n43784\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGusukuma,Luke\nOnline-asynchronous instruct\n0.05\n1\n3\n6\n\n\nCMSC441\n43786\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nSpinola,Rodrigo\nOnline-asynchronous instruct\n0.05\n1\n9\n18\n\n\nCMSC441\n44349\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDahlberg,Robert\nOnline-asynchronous instruct\n0.05\n1\n13\n26\n\n\nCMSC451\n43785\nSENIOR PROJECT I\nLEC\nDahlberg,Robert\nFace-to-Face instruction\n1\n1\n161\n161\n\n\nCMSC455\n40828\nSOFTWARE AS A SERVICE\nLEC\nDamevski,Kostadin\nFace-to-Face instruction\n1\n1\n94\n282\n\n\nCMSC491\n45897\nSP: MACHINE LEARNING\nLEC\nArodz,Tomasz\nFace-to-Face instruction\n1\n1\n15\n45\n\n\nCMSC492\n47095\nINDEPENDENT STUDY\nIND\nThomson-McInnes,Bridget\nDirected Instruction\n1\n1\n1\n3\n\n\nCMSC501\n39781\nADVANCED ALGORITHMS\nLEC\nDinh,Thang\nFace-to-Face instruction\n1\n1\n22\n66\n\n\nCMSC502\n37708\nPARALLEL ALGORITHMS\nLEC\nGhosh,Preetam\nFace-to-Face instruction\n0.5\n1\n10\n30\n\n\nCMSC502\n37709\nPARALLEL ALGORITHMS\nLEC\nGhosh,Preetam\nOnline-synchronous instruction\n0.5\n1\n1\n3\n\n\nCMSC508\n36125\nDATA BASE THEORY\nLEC\nLeonard,John\nFace-to-Face instruction\n1\n1\n133\n399\n\n\nCMSC603\n36113\nHIGH PERF. DISTRIB. SYSTEMS\nLEC\nCano Rojas,Alberto\nFace-to-Face instruction\n1\n1\n20\n60\n\n\nCMSC654\n42291\nMEMORY AND MALWARE FORENSICS\nLEC\nAhmed,Irfan\nFace-to-Face instruction\n1\n1\n13\n39\n\n\nCMSC691\n45416\nST: INTRO TO MACHINE LEARNING\nLEC\nArodz,Tomasz\nFace-to-Face instruction\n0.333333\n1\n40\n120\n\n\nCMSC691\n45871\nSP:EMERGE TRENDS NAT LANG PROC\nLEC\nThomson-McInnes,Bridget\nFace-to-Face instruction\n0.333333\n1\n15\n45\n\n\nCMSC691\n46851\nSP TOP:AI FOR NETWRK &EDGE SYS\nLEC\nNadeem,Tamer\nFace-to-Face instruction\n0.333333\n1\n9\n27\n\n\nCMSC697\n37336\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\nDirected Instruction\n0.0357143\n1\n3\n6\n\n\nCMSC697\n37337\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\nDirected Instruction\n0.0357143\n1\n2\n6\n\n\nCMSC697\n37338\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\nDirected Instruction\n0.0357143\n1\n1\n6\n\n\nCMSC697\n37339\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\nDirected Instruction\n0.0357143\n1\n2\n18\n\n\nCMSC697\n37341\nDIRECTED RESEARCH\nRES\nCano Rojas,Alberto\nDirected Instruction\n0.0357143\n1\n1\n2\n\n\nCMSC697\n37361\nDIRECTED RESEARCH\nRES\nDamevski,Kostadin\nDirected Instruction\n0.0357143\n1\n1\n2\n\n\nCMSC697\n37384\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\nDirected Instruction\n0.0357143\n1\n2\n4\n\n\nCMSC697\n37385\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\nDirected Instruction\n0.0357143\n1\n1\n3\n\n\nCMSC697\n37386\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\nDirected Instruction\n0.0357143\n1\n2\n12\n\n\nCMSC697\n37403\nDIRECTED RESEARCH\nRES\nNadeem,Tamer\nDirected Instruction\n0.0357143\n1\n1\n1\n\n\nCMSC697\n37407\nDIRECTED RESEARCH\nRES\nNadeem,Tamer\nDirected Instruction\n0.0357143\n1\n1\n9\n\n\nCMSC697\n37409\nDIRECTED RESEARCH\nRES\nManic,Milos\nDirected Instruction\n0.0357143\n1\n2\n4\n\n\nCMSC697\n37410\nDIRECTED RESEARCH\nRES\nManic,Milos\nDirected Instruction\n0.0357143\n1\n1\n3\n\n\nCMSC697\n37411\nDIRECTED RESEARCH\nRES\nManic,Milos\nDirected Instruction\n0.0357143\n1\n1\n6\n\n\nCMSC697\n37414\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\nDirected Instruction\n0.0357143\n1\n1\n2\n\n\nCMSC697\n37415\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\nDirected Instruction\n0.0357143\n1\n2\n6\n\n\nCMSC697\n38685\nDIRECTED RESEARCH\nRES\nLuo,Changqing\nDirected Instruction\n0.0357143\n1\n1\n2\n\n\nCMSC697\n38686\nDIRECTED RESEARCH\nRES\nLuo,Changqing\nDirected Instruction\n0.0357143\n1\n3\n9\n\n\nCMSC697\n38688\nDIRECTED RESEARCH\nRES\nLuo,Changqing\nDirected Instruction\n0.0357143\n1\n2\n12\n\n\nCMSC697\n38693\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\nDirected Instruction\n0.0357143\n1\n2\n6\n\n\nCMSC697\n38695\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\nDirected Instruction\n0.0357143\n1\n1\n9\n\n\nCMSC697\n45106\nDIRECTED RESEARCH\nRES\nCranston,Daniel\nDirected Instruction\n0.0357143\n1\n1\n3\n\n\nCMSC697\n45197\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\nDirected Instruction\n0.0357143\n1\n1\n1\n\n\nCMSC697\n46781\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\nDirected Instruction\n0.0357143\n1\n4\n24\n\n\nCMSC697\n46807\nDIRECTED RESEARCH\nRES\nSpinola,Rodrigo\nDirected Instruction\n0.0357143\n1\n1\n9\n\n\nCMSC697\n46810\nDIRECTED RESEARCH\nRES\nCranston,Daniel\nDirected Instruction\n0.0357143\n1\n1\n5\n\n\nCMSC697\n46864\nDIRECTED RESEARCH\nRES\nDamevski,Kostadin\nDirected Instruction\n0.0357143\n1\n1\n5\n\n\nCMSC697\n46976\nDIRECTED RESEARCH\nRES\nKurgan,Lukasz\nDirected Instruction\n0.0357143\n1\n1\n3\n\n\nCMSC702\n40185\nCOMPUTER SCIENCE SEMINAR\nSEM\nThomson-McInnes,Bridget\nFace-to-Face instruction\n1\n1\n18\n18"
  },
  {
    "objectID": "30_explore.html#fall-2023-cmsc-instructors",
    "href": "30_explore.html#fall-2023-cmsc-instructors",
    "title": "Exploring the data",
    "section": "Fall 2023 CMSC Instructors",
    "text": "Fall 2023 CMSC Instructors\nThis table aggregates teaching by instructor and course. The table is sorted by instructor and course.\n\n\n\n\n\nCOURSE\nTITLE\nTYPE\ninstructor\nCRSE sum\nCRN sum\nSTDNTS sum\nHRS sum\n\n\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nAhmed,Irfan\n0.05\n1\n4\n8\n\n\nCMSC654\nMEMORY AND MALWARE FORENSICS\nLEC\nAhmed,Irfan\n1\n1\n13\n39\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nAhmed,Irfan\n0.107143\n3\n7\n39\n\n\nENGR701\nPOST-CANDIDACY DOCT RESEARCH\nRES\nAhmed,Irfan\n0.037037\n1\n1\n9\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nArodz,Tomasz\n0.05\n1\n6\n12\n\n\nCMSC491\nSP: MACHINE LEARNING\nLEC\nArodz,Tomasz\n1\n1\n15\n45\n\n\nCMSC691\nST: INTRO TO MACHINE LEARNING\nLEC\nArodz,Tomasz\n0.333333\n1\n40\n120\n\n\nCMSC391\nTOP:INTRO TO GAME DEVELOPMENT\nLEC\nBennett,Jason\n0.5\n0.5\n17\n51\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLAB\nBudwell,Caroline\n0.125\n0.5\n20\n80\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLEC\nBudwell,Caroline\n0.125\n0.5\n20\n80\n\n\nCMSC302\nINTRO TO DISCRETE STRUCTURES\nLEC\nBudwell,Caroline\n1\n2\n133\n399\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBudwell,Caroline\n0.05\n1\n4\n8\n\n\nCMSC320\nSOFTWARE ENGINEERING & WEB DEV\nLEC\nBuffkin,Jonathan\n0.5\n0.5\n18.5\n55.5\n\n\nCMSC401\nALGORITHM ANL W/ADV DATA STRUC\nLEC\nBulut,Eyuphan\n1\n1\n157\n471\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nBulut,Eyuphan\n0.05\n1\n5\n10\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nBulut,Eyuphan\n0.142857\n4\n8\n36\n\n\nCMSC330\nDATA SCIENCE SKILLS\nLEC\nByram,Abigail\n0.5\n0.5\n14.5\n43.5\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCano Rojas,Alberto\n0.05\n1\n5\n10\n\n\nCMSC603\nHIGH PERF. DISTRIB. SYSTEMS\nLEC\nCano Rojas,Alberto\n1\n1\n20\n60\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nCano Rojas,Alberto\n0.0357143\n1\n1\n2\n\n\nENGR701\nPOST-CANDIDACY DOCT RESEARCH\nRES\nCano Rojas,Alberto\n0.037037\n1\n1\n9\n\n\nCMSC235\nCOMPUTING AND DATA ETHICS\nLEC\nChaitankar,Vijender\n1\n1\n390\n1170\n\n\nCMSC340\nCYBERSECURITY SKILLS\nLEC\nChaitankar,Vijender\n0.5\n0.5\n27\n81\n\n\nCMSC303\nINTRO TO THEORY OF CMPUTATION\nLEC\nCranston,Daniel\n1\n1\n119\n357\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nCranston,Daniel\n0.05\n1\n6\n12\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nCranston,Daniel\n0.0714286\n2\n2\n8\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDahlberg,Robert\n0.05\n1\n13\n26\n\n\nCMSC451\nSENIOR PROJECT I\nLEC\nDahlberg,Robert\n1\n1\n161\n161\n\n\nENGR291\nTOP: ELECTION SECURITY\nLEC\nDahlberg,Robert\n1\n1\n30\n30\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDamevski,Kostadin\n0.05\n1\n8\n16\n\n\nCMSC455\nSOFTWARE AS A SERVICE\nLEC\nDamevski,Kostadin\n1\n1\n94\n282\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nDamevski,Kostadin\n0.0714286\n2\n2\n7\n\n\nENGR497\nVERTICALLY INTEGRATED PROJECTS\nLAB\nDamevski,Kostadin\n0.0294118\n1\n1\n1\n\n\nENGR701\nPOST-CANDIDACY DOCT RESEARCH\nRES\nDamevski,Kostadin\n0.037037\n1\n1\n9\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nDinh,Thang\n0.05\n1\n9\n18\n\n\nCMSC501\nADVANCED ALGORITHMS\nLEC\nDinh,Thang\n1\n1\n22\n66\n\n\nCMSC210\nCOMPUTERS AND PROGRAMMING\nLEC\nDuke,Debra\n1\n2\n177\n531\n\n\nCMSC256\nDATA STRUCTURE & OBJECT PROG\nLAB\nDuke,Debra\n0.5\n1\n57\n228\n\n\nCMSC256\nDATA STRUCTURE & OBJECT PROG\nLEC\nDuke,Debra\n0.5\n1\n57\n228\n\n\nCMSC320\nSOFTWARE ENGINEERING & WEB DEV\nLEC\nDuke,Debra\n0.5\n0.5\n18.5\n55.5\n\n\nCMSC330\nDATA SCIENCE SKILLS\nLEC\nDuke,Debra\n0.5\n0.5\n14.5\n43.5\n\n\nCMSC340\nCYBERSECURITY SKILLS\nLEC\nDuke,Debra\n0.5\n0.5\n27\n81\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGhosh,Preetam\n0.05\n1\n8\n16\n\n\nCMSC502\nPARALLEL ALGORITHMS\nLEC\nGhosh,Preetam\n1\n2\n11\n33\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nGhosh,Preetam\n0.107143\n3\n5\n19\n\n\nENGR701\nPOST-CANDIDACY DOCT RESEARCH\nRES\nGhosh,Preetam\n0.037037\n1\n1\n9\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGill,Satinder\n0.05\n1\n12\n24\n\n\nEGRB102\nINTRO TO BIOMED ENGINEERING\nLEC\nGill,Satinder\n0.5\n0.5\n20.5\n61.5\n\n\nEGRB203\nSTATICS & MECHANICS MATERIALS\nLEC\nGill,Satinder\n1\n1\n15\n45\n\n\nENGR492\nINDEPENDENT STUDY IN ENGINRNG\nIND\nGill,Satinder\n0.25\n1\n1\n3\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLAB\nGrove,Ralph\n0.142857\n0.5\n23\n92\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLEC\nGrove,Ralph\n0.142857\n0.5\n23\n92\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLAB\nGusukuma,Luke\n0.125\n0.5\n20\n80\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLEC\nGusukuma,Luke\n0.125\n0.5\n20\n80\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLAB\nGusukuma,Luke\n0.142857\n0.5\n28\n112\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLEC\nGusukuma,Luke\n0.142857\n0.5\n28\n112\n\n\nCMSC403\nPROGRAMMING LANGUAGES\nLEC\nGusukuma,Luke\n1\n1\n80\n240\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nGusukuma,Luke\n0.05\n1\n3\n6\n\n\nCMSC435\nINTRODUCTION TO DATA SCIENCE\nLEC\nKurgan,Lukasz\n1\n1\n47\n141\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nKurgan,Lukasz\n0.05\n1\n7\n14\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nKurgan,Lukasz\n0.0357143\n1\n1\n3\n\n\nCMSC440\nDATA COMMUNCATION & NETWORKING\nLEC\nLee,Aaron\n1\n1\n22\n66\n\n\nCMSC391\nTOP:INTRO TO GAME DEVELOPMENT\nLEC\nLeonard,John\n0.5\n0.5\n17\n51\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLeonard,John\n0.05\n1\n20\n40\n\n\nCMSC508\nDATA BASE THEORY\nLEC\nLeonard,John\n1\n1\n133\n399\n\n\nENGR497\nVERTICALLY INTEGRATED PROJECTS\nLAB\nLeonard,John\n0.0588235\n1\n4.5\n6\n\n\nCMSC413\nINTRO TO CYBERSECURITY\nLEC\nLuo,Changqing\n1\n1\n25\n75\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nLuo,Changqing\n0.05\n1\n4\n8\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nLuo,Changqing\n0.107143\n3\n6\n23\n\n\nCMSC409\nARTIFICIAL INTELLIGENCE\nLEC\nManic,Milos\n1\n1\n27\n81\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nManic,Milos\n0.05\n1\n8\n16\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nManic,Milos\n0.107143\n3\n4\n13\n\n\nENGR497\nVERTICALLY INTEGRATED PROJECTS\nLAB\nManic,Milos\n0.0294118\n1\n1\n1\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nNadeem,Tamer\n0.05\n1\n19\n38\n\n\nCMSC691\nSP TOP:AI FOR NETWRK &EDGE SYS\nLEC\nNadeem,Tamer\n0.333333\n1\n9\n27\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nNadeem,Tamer\n0.0714286\n2\n2\n10\n\n\nCMSC312\nINTRO TO OPERATING SYSTEMS\nLEC\nNishi,Manziba\n1\n1\n42\n126\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLAB\nSands,Allison\n0.125\n0.5\n19.5\n78\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLEC\nSands,Allison\n0.125\n0.5\n19.5\n78\n\n\nCMSC257\nCOMPUTER SYSTEMS\nLAB\nSonmez,Ahmet\n0.4\n1\n40.5\n162\n\n\nCMSC257\nCOMPUTER SYSTEMS\nLEC\nSonmez,Ahmet\n0.6\n2\n134.5\n538\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLAB\nSparks,Claire\n0.142857\n0.5\n40\n160\n\n\nCMSC255\nINTRODUCTION TO PROGRAMMING\nLEC\nSparks,Claire\n0.285714\n1.5\n65\n260\n\n\nCMSC311\nCOMPUTER ORGANIZATION\nLEC\nSparks,Claire\n1\n1\n131\n393\n\n\nCMSC355\nFUNDAMENTALS SOFTWARE ENGINEER\nLEC\nSpinola,Rodrigo\n1\n1\n87\n261\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nSpinola,Rodrigo\n0.05\n1\n9\n18\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nSpinola,Rodrigo\n0.0357143\n1\n1\n9\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nThomson-McInnes,Bridget\n0.05\n1\n7\n14\n\n\nCMSC492\nINDEPENDENT STUDY\nIND\nThomson-McInnes,Bridget\n1\n1\n1\n3\n\n\nCMSC691\nSP:EMERGE TRENDS NAT LANG PROC\nLEC\nThomson-McInnes,Bridget\n0.333333\n1\n15\n45\n\n\nCMSC697\nDIRECTED RESEARCH\nRES\nThomson-McInnes,Bridget\n0.107143\n3\n4\n9\n\n\nCMSC702\nCOMPUTER SCIENCE SEMINAR\nSEM\nThomson-McInnes,Bridget\n1\n1\n18\n18\n\n\nENGR497\nVERTICALLY INTEGRATED PROJECTS\nLAB\nThomson-McInnes,Bridget\n0.0294118\n0.5\n1.5\n1.5\n\n\nENGR701\nPOST-CANDIDACY DOCT RESEARCH\nRES\nThomson-McInnes,Bridget\n0.037037\n1\n1\n9\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLAB\nTraub,Adam\n0.125\n0.5\n19.5\n78\n\n\nCMSC254\nINTRO TO PROBLEM-SOLVING\nLEC\nTraub,Adam\n0.125\n0.5\n19.5\n78\n\n\nCMSC415\nINTRO TO CRYPTOGRAPHY\nLEC\nZhou,Hongsheng\n1\n1\n16\n48\n\n\nCMSC441\nSR DESIGN STUDIO I (LAB/PROJ)\nLAB\nZhou,Hongsheng\n0.05\n1\n4\n8"
  },
  {
    "objectID": "30_explore.html#fall-2023-cmsc-teaching-loads",
    "href": "30_explore.html#fall-2023-cmsc-teaching-loads",
    "title": "Exploring the data",
    "section": "Fall 2023 CMSC Teaching loads",
    "text": "Fall 2023 CMSC Teaching loads\nThe table below shows credit hours by type of course for faculty in CMSC.\n\nCredit hour definitions\nUG degree requirements\n\nThe table is sorted in descending order by credit hours taught (HRS sum). The HRS sum is broken down by type of course (e.g., LEC, LAB, etc.)\nValues are split 50/50 between the primary and secondary instructors if there is a secondary instructor.\n\n\n\n\n\n\nCRSE sum\nCRN sum\nSTDNT sum\nHRS sum\nLEC\nLAB\nSEM\nRES\nIND\n\n\n\n\nChaitankar,Vijender\n1.5\n1.5\n417\n1251\n1251\n\n\n\n\n\n\nDuke,Debra\n3.5\n5.5\n351\n1167\n939\n228\n\n\n\n\n\nSparks,Claire\n1.42857\n3\n236\n813\n653\n160\n\n\n\n\n\nSonmez,Ahmet\n1\n3\n175\n700\n538\n162\n\n\n\n\n\nGusukuma,Luke\n1.58571\n4\n179\n630\n432\n198\n\n\n\n\n\nBudwell,Caroline\n1.3\n4\n177\n567\n479\n88\n\n\n\n\n\nBulut,Eyuphan\n1.19286\n6\n170\n517\n471\n10\n\n36\n\n\n\nLeonard,John\n1.60882\n3.5\n174.5\n496\n450\n46\n\n\n\n\n\nCranston,Daniel\n1.12143\n4\n127\n377\n357\n12\n\n8\n\n\n\nDamevski,Kostadin\n1.18788\n6\n106\n315\n282\n17\n\n16\n\n\n\nSpinola,Rodrigo\n1.08571\n3\n97\n288\n261\n18\n\n9\n\n\n\nDahlberg,Robert\n2.05\n3\n204\n217\n191\n26\n\n\n\n\n\nGrove,Ralph\n0.285714\n1\n46\n184\n92\n92\n\n\n\n\n\nArodz,Tomasz\n1.38333\n3\n61\n177\n165\n12\n\n\n\n\n\nKurgan,Lukasz\n1.08571\n3\n55\n158\n141\n14\n\n3\n\n\n\nSands,Allison\n0.25\n1\n39\n156\n78\n78\n\n\n\n\n\nTraub,Adam\n0.25\n1\n39\n156\n78\n78\n\n\n\n\n\nGill,Satinder\n1.8\n3.5\n48.5\n133.5\n106\n24\n\n\n3\n\n\nNishi,Manziba\n1\n1\n42\n126\n126\n\n\n\n\n\n\nManic,Milos\n1.18655\n6\n40\n111\n81\n17\n\n13\n\n\n\nLuo,Changqing\n1.15714\n5\n35\n106\n75\n8\n\n23\n\n\n\nThomson-McInnes,Bridget\n2.55692\n8.5\n47.5\n99.5\n45\n16\n18\n18\n3\n\n\nAhmed,Irfan\n1.19418\n6\n25\n95\n39\n8\n\n48\n\n\n\nDinh,Thang\n1.05\n2\n31\n84\n66\n18\n\n\n\n\n\nCano Rojas,Alberto\n1.12275\n4\n27\n81\n60\n10\n\n11\n\n\n\nGhosh,Preetam\n1.19418\n7\n25\n77\n33\n16\n\n28\n\n\n\nNadeem,Tamer\n0.454762\n4\n30\n75\n27\n38\n\n10\n\n\n\nLee,Aaron\n1\n1\n22\n66\n66\n\n\n\n\n\n\nZhou,Hongsheng\n1.05\n2\n20\n56\n48\n8\n\n\n\n\n\nBuffkin,Jonathan\n0.5\n0.5\n18.5\n55.5\n56\n\n\n\n\n\n\nBennett,Jason\n0.5\n0.5\n17\n51\n51\n\n\n\n\n\n\nByram,Abigail\n0.5\n0.5\n14.5\n43.5\n44"
  },
  {
    "objectID": "30_explore.html#cmsc-teaching-loads---last-2-terms",
    "href": "30_explore.html#cmsc-teaching-loads---last-2-terms",
    "title": "Exploring the data",
    "section": "CMSC Teaching loads - last 2 terms",
    "text": "CMSC Teaching loads - last 2 terms\nThe table below shows credit hours by type of course for faculty in CMSC.\nThe data are aggregate of the past two terms (Spring 2023 and Fall 2023).\nThe table is sorted in descending order by credit hours taught (HRS sum). The HRS sum is broken down by type of course (e.g., LEC, LAB, etc.)\nValues are split 50/50 between the primary and secondary instructors if there is a secondary instructor.\n\ncols = ['LEC','LAB','SEM','RES','IND']\n\ninstructors = list(stacked_df[\n    (stacked_df['TERM'] == '202410')\n    & (stacked_df['DEPT'] == 'CMSC')\n][\"instructor\"].unique())\n\n\ndf = stacked_df[\n    (stacked_df['TERM'].isin(['202320','202410']))\n    & (stacked_df['instructor'].isin(instructors))\n]\n\npivot_df = pd.pivot_table(df,index='instructor',values='sum_term_crse_crn_hours',columns='TYPE',aggfunc='sum' )\npivot_df = pivot_df[ cols ]\ndef format_no_decimal(val):\n    return f'{val:.0f}' if not pd.isna(val) else ''\n\n# Apply the lambda function to all columns\npivot_df = pivot_df.map(format_no_decimal)\n\nmeasures = {'sum_term_crse':'sum','sum_term_crse_crn':'sum','sum_term_crse_crn_students':'sum','sum_term_crse_crn_hours':'sum'}\ncourses_df = df.groupby('instructor').agg(measures).reset_index()\n\ncourses_df.columns = ['instructor','CRSE','CRN','STDNT','HRS']\n\npivot_df = pd.merge( courses_df,pivot_df,right_index=True,left_on='instructor',how='right')\npivot_df = pivot_df.set_index('instructor')\npivot_df = pivot_df.sort_values(by=['HRS'],ascending=False)\n\ncols =  ['CRSE sum','CRN sum','STDNT sum','HRS sum','LEC','LAB','SEM','RES','IND']\n\nMarkdown(tabulate(\n  pivot_df, \n  headers=cols,\n  numalign=\"right\",stralign=\"right\",\n  showindex=True\n))\n\n\n\n\n\nCRSE sum\nCRN sum\nSTDNT sum\nHRS sum\nLEC\nLAB\nSEM\nRES\nIND\n\n\n\n\nDuke,Debra\n6\n10\n654\n2228\n1696\n532\n\n\n\n\n\nSparks,Claire\n3.14286\n6\n452\n1573\n1265\n308\n\n\n\n\n\nChaitankar,Vijender\n1.5\n1.5\n417\n1251\n1251\n\n\n\n\n\n\nBudwell,Caroline\n2.35882\n7\n361\n1111\n1007\n104\n\n\n\n\n\nSonmez,Ahmet\n2\n6\n276\n1104\n836\n268\n\n\n\n\n\nGusukuma,Luke\n3.87143\n7\n292\n1019\n721\n298\n\n\n\n\n\nDahlberg,Robert\n5.10882\n7\n528\n899\n694\n78\n127\n\n\n\n\nLeonard,John\n2.72028\n6.5\n270\n750\n660\n90\n\n\n\n\n\nGhosh,Preetam\n2.33634\n12\n231\n698\n591\n40\n\n67\n\n\n\nCranston,Daniel\n2.20803\n7\n224\n670\n633\n20\n\n17\n\n\n\nDamevski,Kostadin\n3.83003\n12.5\n214.5\n620.5\n555\n25\n10\n30\n\n\n\nGrove,Ralph\n1.28571\n2\n190\n616\n524\n92\n\n\n\n\n\nBulut,Eyuphan\n2.82381\n11.5\n202.5\n608.5\n510\n10\n10\n78\n\n\n\nNadeem,Tamer\n1.6247\n10\n166\n475\n390\n58\n\n27\n\n\n\nGill,Satinder\n4.8\n6.5\n145.5\n424.5\n398\n24\n\n\n3\n\n\nSpinola,Rodrigo\n1.14454\n4\n103\n300\n261\n30\n\n9\n\n\n\nAhmed,Irfan\n2.35618\n11\n78\n286\n165\n16\n\n105\n\n\n\nThomson-McInnes,Bridget\n4.75318\n16\n96.5\n244.5\n150\n32\n18\n41\n3\n\n\nCano Rojas,Alberto\n2.26491\n9\n77\n230\n189\n18\n\n23\n\n\n\nArodz,Tomasz\n2.44216\n5\n72\n207\n189\n18\n\n\n\n\n\nKurgan,Lukasz\n1.58571\n4\n70\n203\n186\n14\n\n3\n\n\n\nManic,Milos\n2.29474\n11\n72\n188\n129\n32\n\n27\n\n\n\nLuo,Changqing\n2.2993\n11\n60\n183\n117\n20\n\n46\n\n\n\nSands,Allison\n0.25\n1\n39\n156\n78\n78\n\n\n\n\n\nTraub,Adam\n0.25\n1\n39\n156\n78\n78\n\n\n\n\n\nNishi,Manziba\n1\n1\n42\n126\n126\n\n\n\n\n\n\nByram,Abigail\n1.5\n1.5\n40.5\n121.5\n122\n\n\n\n\n\n\nDinh,Thang\n2.1366\n5\n40\n110\n78\n26\n\n6\n\n\n\nBuffkin,Jonathan\n1.5\n1.5\n35.5\n106.5\n106\n\n\n\n\n\n\nZhou,Hongsheng\n2.1366\n5\n30\n89\n66\n14\n\n9\n\n\n\nLee,Aaron\n1\n1\n22\n66\n66\n\n\n\n\n\n\nBennett,Jason\n0.5\n0.5\n17\n51\n51"
  },
  {
    "objectID": "10_download.html",
    "href": "10_download.html",
    "title": "Downloading the data",
    "section": "",
    "text": "Data were pulled from the VCU Reporting Center in the Staff | Course Schedule Report as shown below:\nReports are run by semester for the College of Engineering and stored in separate files. Care should be taken to open each file after itâ€™s been saved and RESAVE the file into XLSX format.\n\n\n\n\n\n\n\n\n\n\nThe files are named appropriately and stored in the data folder in this repository.\n\n\n\n\n\nFile name\nTerm Code\nAcad Year\nPeriod Code\nPeriod Name\n\n\n\n\nVCU-SOC-202110-FA2020.xlsx\n202110\nAY20-21\nFA2020\nFall 2020\n\n\nVCU-SOC-202120-SP2021.xlsx\n202120\nAY20-21\nSP2021\nSpring 2021\n\n\nVCU-SOC-202130-SU2021.xlsx\n202130\nAY20-21\nSU2021\nSummer 2021\n\n\nVCU-SOC-202210-FA2021.xlsx\n202210\nAY21-22\nFA2021\nFall 2021\n\n\nVCU-SOC-202220-SP2022.xlsx\n202220\nAY21-22\nSP2022\nSpring 2022\n\n\nVCU-SOC-202230-SU2022.xlsx\n202230\nAY21-22\nSU2022\nSummer 2022\n\n\nVCU-SOC-202310-FA2022.xlsx\n202310\nAY22-23\nFA2022\nFall 2022\n\n\nVCU-SOC-202320-SP2023.xlsx\n202320\nAY22-23\nSP2023\nSpring 2023\n\n\nVCU-SOC-202330-SU2023.xlsx\n202330\nAY22-23\nSU2023\nSummer 2023\n\n\nVCU-SOC-202410-FA2023.xlsx\n202410\nAY23-24\nFA2023\nFall 2023"
  },
  {
    "objectID": "10_download.html#data-sources",
    "href": "10_download.html#data-sources",
    "title": "Downloading the data",
    "section": "",
    "text": "Data were pulled from the VCU Reporting Center in the Staff | Course Schedule Report as shown below:\nReports are run by semester for the College of Engineering and stored in separate files. Care should be taken to open each file after itâ€™s been saved and RESAVE the file into XLSX format.\n\n\n\n\n\n\n\n\n\n\nThe files are named appropriately and stored in the data folder in this repository.\n\n\n\n\n\nFile name\nTerm Code\nAcad Year\nPeriod Code\nPeriod Name\n\n\n\n\nVCU-SOC-202110-FA2020.xlsx\n202110\nAY20-21\nFA2020\nFall 2020\n\n\nVCU-SOC-202120-SP2021.xlsx\n202120\nAY20-21\nSP2021\nSpring 2021\n\n\nVCU-SOC-202130-SU2021.xlsx\n202130\nAY20-21\nSU2021\nSummer 2021\n\n\nVCU-SOC-202210-FA2021.xlsx\n202210\nAY21-22\nFA2021\nFall 2021\n\n\nVCU-SOC-202220-SP2022.xlsx\n202220\nAY21-22\nSP2022\nSpring 2022\n\n\nVCU-SOC-202230-SU2022.xlsx\n202230\nAY21-22\nSU2022\nSummer 2022\n\n\nVCU-SOC-202310-FA2022.xlsx\n202310\nAY22-23\nFA2022\nFall 2022\n\n\nVCU-SOC-202320-SP2023.xlsx\n202320\nAY22-23\nSP2023\nSpring 2023\n\n\nVCU-SOC-202330-SU2023.xlsx\n202330\nAY22-23\nSU2023\nSummer 2023\n\n\nVCU-SOC-202410-FA2023.xlsx\n202410\nAY23-24\nFA2023\nFall 2023"
  },
  {
    "objectID": "20_clean.html",
    "href": "20_clean.html",
    "title": "Cleaning the data",
    "section": "",
    "text": "This script describes the data and walks through a process of data cleaning.\nAt completion of this script all the individual semester data files will be combined into a single dataframe for analysis, and the dataframe will be refactored for cleaner analysis."
  },
  {
    "objectID": "20_clean.html#data-sources",
    "href": "20_clean.html#data-sources",
    "title": "Cleaning the data",
    "section": "Data sources",
    "text": "Data sources\nThe files are named appropriately and stored in the data folder in this repository.\n\n\n\n\n\nFile name\nTerm Code\nAcad Year\nPeriod Code\nPeriod Name\n\n\n\n\nVCU-SOC-202110-FA2020.xlsx\n202110\nAY20-21\nFA2020\nFall 2020\n\n\nVCU-SOC-202120-SP2021.xlsx\n202120\nAY20-21\nSP2021\nSpring 2021\n\n\nVCU-SOC-202130-SU2021.xlsx\n202130\nAY20-21\nSU2021\nSummer 2021\n\n\nVCU-SOC-202210-FA2021.xlsx\n202210\nAY21-22\nFA2021\nFall 2021\n\n\nVCU-SOC-202220-SP2022.xlsx\n202220\nAY21-22\nSP2022\nSpring 2022\n\n\nVCU-SOC-202230-SU2022.xlsx\n202230\nAY21-22\nSU2022\nSummer 2022\n\n\nVCU-SOC-202310-FA2022.xlsx\n202310\nAY22-23\nFA2022\nFall 2022\n\n\nVCU-SOC-202320-SP2023.xlsx\n202320\nAY22-23\nSP2023\nSpring 2023\n\n\nVCU-SOC-202330-SU2023.xlsx\n202330\nAY22-23\nSU2023\nSummer 2023\n\n\nVCU-SOC-202410-FA2023.xlsx\n202410\nAY23-24\nFA2023\nFall 2023"
  },
  {
    "objectID": "20_clean.html#data-cleaning",
    "href": "20_clean.html#data-cleaning",
    "title": "Cleaning the data",
    "section": "Data Cleaning",
    "text": "Data Cleaning\nThe following sections combine the individual sources of data and clean them up.\n\nCombining to single data frame\nThe following section combines each XLSX into a single data frame. The contents of the files are variable in length depending on the number of sections taught during any given semester.\nThe appropriate block starts one row after the row with the keyword TERM in the first column, denoting the header row. The appropriate block ends with the row prior to the row with the keyword N =.\nWeâ€™re assuming that all xlsx workbooks share the same columns and names.\n\n# Initialize an empty list to store trimmed DataFrames\ntrimmed_dfs = []\n\n# Iterate through the list of XLSX file names\nfor file_name in xlsx_df['file_name']:\n    # Load the XLSX file into a DataFrame\n    full_path = os.path.join(directory_path, file_name)\n    df = pd.read_excel(full_path)\n    \n    # Find the row index where \"TERM\" is in the first column\n    term_index = df.index[df.iloc[:, 0] == \"TERM\"].tolist()[0]\n    \n    # Find the row index where \"N=\" is in the first column\n    n_index = df.index[df.iloc[:, 0].str.startswith(\"N =\").fillna(False)].tolist()[0]\n\n    # Clip the desired block and add column names\n    trimmed_df = df.loc[term_index + 1 : n_index - 1]\n    trimmed_df.columns = df.iloc[term_index].values\n\n    # Append the trimmed DataFrame to the list\n    trimmed_dfs.append(trimmed_df)\n\n# Combine the individual dataframes into one big one.\nsections_df = pd.concat(trimmed_dfs, ignore_index=True)\n\n\n\nMerge in the term and period data from the xlsx_df dataframe\nThe following code merges in the term and period data with the section data. First ensure that the key columns are strings, then merge away.\n\nsections_df['SECT'] = sections_df['SECT'].astype(str)\nsections_df['TERM'] = sections_df['TERM'].astype(str)\nxlsx_df['term_code'] = xlsx_df['term_code'].astype(str)\nsections_df = pd.merge(sections_df,xlsx_df,left_on='TERM', right_on='term_code', how='left')\n\n\n\nFix known errors\nThe data in Banner doesnâ€™t always reflect reality. This step corrects known errors in the data.\nNote that the section data are stored one row per term-crn-meeting period.\n\n# Spring 2023: CMSC475 John Leonard taught for David Shepherd\nfix(1,'Swap Leonard for Shepherd',{'TERM':'202320','CRN':'43471'},{'PRIMARY INSTRUCTOR FIRST NAME':'John','PRIMARY INSTRUCTOR LAST NAME':'Leonard'})\n\n# Fall 2024: CMSC391 is cross listed with COAR463.\n# Total enrollment 34 across two instructors (Bennett and Leonard)\n# Currently Banner shows only 20 in the JL section and doesn't mention the COAR section.\nfix(2,'Fix incorrect cross listing',{'TERM':'202410','CRN':'46263'},{'ACTUAL ENROLLMENT':34})\n\n#fix({'TERM':'202320','CRN':'43471'},{'PRIMARY INSTRUCTOR FIRST NAME':'John','PRIMARY INSTRUCTOR LAST NAME':'Leonard'})\n\n\n\nReshape the data\nThe current dataframe sections_df contains one record per term-crn-meeting period tuple. Within each tuple there can be up to 2 instructors. We need to reshape the data with the instructors in a single column.\nWhile weâ€™re here we can combine instructor first and last name, and drop verbose columns.\n\ncols = sections_df.columns\nvalues_to_remove = ['PRIMARY INSTRUCTOR FIRST NAME','PRIMARY INSTRUCTOR LAST NAME','SECONDARY INSTRUCTOR FIRST NAME','SECONDARY INSTRUCTOR LAST NAME']\ncols = [x for x in cols if x not in values_to_remove]\n\nsections_df['ins1_last'] = sections_df['PRIMARY INSTRUCTOR LAST NAME']\nsections_df['ins1_first'] = sections_df['PRIMARY INSTRUCTOR FIRST NAME']\nsections_df['ins2_last'] = sections_df['SECONDARY INSTRUCTOR LAST NAME']\nsections_df['ins2_first'] = sections_df['SECONDARY INSTRUCTOR FIRST NAME']\nsections_df['instructor_1'] = sections_df['ins1_last']+','+sections_df['ins1_first']\nsections_df['instructor_2'] = sections_df['ins2_last']+','+sections_df['ins2_first']\nsections_df['instructor_1'].fillna('',inplace=True)\nsections_df['instructor_2'].fillna('',inplace=True)\n\nstacked_df = pd.melt(sections_df,\n    id_vars=cols,\n    value_vars=['instructor_1','instructor_2'],\n    var_name='instructor source',\n    value_name='instructor'\n)\n\n\n\nClean up rows\n\n# remove rows with empty instructor 1.  Keep rows with empty instructor 1.\nstacked_df = stacked_df[ ~ ((stacked_df['instructor source']=='instructor_2') & (stacked_df['instructor']=='')) ]\n\n# replace any missing instructors with note\nstacked_df.loc[stacked_df[\"instructor\"].isin(['']),\"instructor\"] = stacked_df[stacked_df[\"instructor\"].isin([''])]['COURSE']+' '+stacked_df[stacked_df[\"instructor\"].isin([''])]['TERM']+' '+stacked_df[stacked_df[\"instructor\"].isin([''])]['CRN']\n\n# drop rows with zero enrollments\nstacked_df = stacked_df[stacked_df['ACTUAL ENROLLMENT']&gt;0]\n\n# Sort the data frame so it looks pretty in the output file.\nstacked_df = stacked_df.sort_values(['TERM','DEPT','COURSE','SECT','instructor source','instructor'])\n\n\n\nAdd additional columns\nWe may need the subject and the course number in the workload model analysis.\n\nstacked_df[\"course_subject\"] = stacked_df[\"COURSE\"].str[:4]\nstacked_df[\"course_number\"] = stacked_df[\"COURSE\"].str[4:]\n\n\n\nMerge persistent instructor data\nWeâ€™re storing some of the results in google sheets. Further, weâ€™re using google sheets to store persistent data not found in the VCU course schedule report.\n\n# define scope\nscope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']\n\n# create credentials object\ncredential_file = os.path.join(os.path.expanduser(\"~\"), \".gsecrets\", \"gsheets-credentials.json\")\nif not os.path.isfile( credential_file ):\n  print(\"Missing credential file:\",credential_file)\n  sys.exit()\n\n# authorize the client\ncreds = ServiceAccountCredentials.from_json_keyfile_name(credential_file, scope)\nclient = gspread.authorize(creds)\n\nspreadsheet_key = \"1ZK7k8M85CXLof6FdeJYJuGFbfjsOXrCv5mc7OgUInWw\"\nworksheet_name = \"Instructor data\"\nsheet = client.open_by_key(spreadsheet_key).worksheet(worksheet_name)\ninstructor_df = get_as_dataframe(worksheet=sheet, evaluate_formulas=True )\n\nstacked_df = pd.merge( stacked_df,instructor_df,left_on='instructor',right_on='instructor',how='left')\n\nworksheet_name = \"Instructor notes\"\nsheet = client.open_by_key(spreadsheet_key).worksheet(worksheet_name)\ninstructor_notes_df = get_as_dataframe(worksheet=sheet, evaluate_formulas=True )\n\nstacked_df = pd.merge( stacked_df,instructor_notes_df,left_on='instructor',right_on='instructor',how='left')\n\n\n\nMerge persistent course data\n\n# spreadsheet_key = \"1ZK7k8M85CXLof6FdeJYJuGFbfjsOXrCv5mc7OgUInWw\" from above!\nworksheet_name = \"Course notes\"\nsheet = client.open_by_key(spreadsheet_key).worksheet(worksheet_name)\ncourse_notes_df = get_as_dataframe(worksheet=sheet, evaluate_formulas=True )\n\nstacked_df = pd.merge( stacked_df,course_notes_df,left_on='COURSE',right_on='crse',how='left')\n\n\n\nIdentify shared rooms\nMany larger courses comprise of multiple CRN sharing a single classroom period. We need to identify unique combinations of days of week and rooms and assign store these for later aggregation.\n\nmeeting_cols = ['MON-IND','TUE-IND','WED-IND','THU-IND','FRI-IND','SAT-IND','SUN-IND','BEGIN TIME','END TIME','BUILDING','ROOM']\nstacked_df[\"meeting_code\"] = \"\"\nfor col in meeting_cols:\n    stacked_df[col] = stacked_df[col].fillna('.')\n    stacked_df[\"meeting_code\"] = stacked_df[\"meeting_code\"] + stacked_df[col].astype(str)\nstacked_df['meeting_id'] = pd.factorize(stacked_df['meeting_code'])[0]\n\nday_cols = ['MON-IND','TUE-IND','WED-IND','THU-IND','FRI-IND','SAT-IND','SUN-IND']\nstacked_df[\"mtgs_per_wk\"] = 0\nfor col in day_cols:\n    stacked_df[col] = stacked_df[col].fillna('.')\n    stacked_df['mtgs_per_wk'] = stacked_df[\"mtgs_per_wk\"] + (stacked_df[col] != \".\").astype(int)\n\n\n\nCompute appropriate aggregate measures\nThese measures are used in later calculations for numbers of courses, sections, instructors, etc.\n\n# Create various aggregate columns\nstacked_df['sum_term'] = 1.0 / stacked_df.groupby(['TERM'])['TERM'].transform('count')\nstacked_df['sum_term_crse'] = 1.0 / stacked_df.groupby(['TERM','COURSE'])['COURSE'].transform('count')\nstacked_df['sum_term_crse_crn'] = 1.0 / stacked_df.groupby(['TERM','COURSE','CRN'])['CRN'].transform('count')\nstacked_df['sum_term_crse_crn_students'] = stacked_df['ACTUAL ENROLLMENT'] * stacked_df['sum_term_crse_crn']\nstacked_df['sum_term_crse_crn_hours'] =  stacked_df['sum_term_crse_crn_students'] * stacked_df['MAX CREDITS']\n\n\n\nWorkload model assignments\nThese are placeholders for any proposed workload model based on course and instructor attributes.\nThe sort attribute is used to hold the aggregate workload score. It is used in google sheets to help sort courses by instructors in the proper order.\n\nstacked_df['sum_term_crse_wrkld_sample'] = 0.0\nstacked_df['sum_term_crse_wrkld_a'] = 0.0\nstacked_df['sum_term_crse_wrkld_b'] = 0.0\nstacked_df['sum_term_crse_wrkld_c'] = 0.0\n\n\n\nSample workload model\nThis is a sample workload model. The assigned faculty workoad will be stored in the sum_term_crse_wrklod_sample field. Here is the model:\n\nEach section/CRN is worth a full teaching credit.\nResearch, indepedent study and coop/intern sections receive zero teaching credit in this workload model. Instructors receive credit through their salary if theyâ€™re staff. Research active faculty get reduced teaching loads.\nLab sections including actual course labs, capstone/senior design, and VIP receive 1/3 credit. This is consistent with the model that 3 lab hours is equivalent to 1 teaching hour. (e.g., 3-3-4 courses.) NOTE that laboratory sections are NOT coded as separate labs, rather they are coded as LEC making it difficult to discern these. See EGRE306 for an example.\nSeminar sections get full section credit as a positive incentive. There is a limited number of SEM courses, they are important to the curriculum, and we want them covered.\nCapstone designs are scaled to give one LAB (0.33 per above) unit per groups of 4 students.\n\n\n# Assign standard CRN : One CRN/section per teaching course\nstacked_df['sum_term_crse_wrkld_sample'] = stacked_df[\"sum_term_crse_crn\"]\n\n# Adjust these courses by shared offerings, classes with different CRN taught \n# by the same instructor in the same room/period\nstacked_df['sum_term_crse_wrkld_sample'] = stacked_df['sum_term_crse_wrkld_sample'] / stacked_df.groupby(['TERM','instructor','meeting_id'])['meeting_id'].transform('count')\n\n# For specific courses, if we see a meeting time with only one day per week then this is a lab section\n# indepedent of the CRN.  We'll adjust them to LAB sections, then let the logic below\n# code them as 1/3 credit, or whatever a lab section should get.\n\n#courses_with_labs = ['EGRE306']\n#for course in courses_with_labs:\n#    stacked_df.loc[(stacked_df['COURSE']==course)&(stacked_df['mtgs_per_wk']==1),'TYPE'] = 'LAB'\n\n# Hack to identify lab courses:  they are worth 4 units and coded as LEC. The\n# meeting period that meets for 1 day per week is a LAB.\nstacked_df.loc[(stacked_df['MAX CREDITS']==4)&(stacked_df['TYPE']=='LEC')&(stacked_df['mtgs_per_wk']==1),'TYPE'] = 'LAB'\n\n\n# Exclude teaching credit for research (RES), independent study (IND), and intern/coop (FLD).\n# Credit is given for these activities in reduced teaching (research active) or summer pay.\nstacked_df.loc[stacked_df['TYPE'].isin(['RES','IND','FLD']),'sum_term_crse_wrkld_sample'] = 0.0\n\n# Reassign LAB 1/3 of CRN.  Labs include capstone, regular lab sections, and VIP\nstacked_df.loc[stacked_df['TYPE'].isin(['LAB']),'sum_term_crse_wrkld_sample'] = stacked_df.loc[stacked_df['TYPE'].isin(['LAB']),'sum_term_crse_wrkld_sample'] / 3.0\n\n# For capstone senior design adjust workload to consider bundles of 4 students.  Each bundle is worth 0.33 (set above\nsenior_design_courses = ['CLSC403','EGRB401','EGRB402','CMSC441','CMSC442','CMSC451','CMSC452','EGMN402','EGMN403','ENGR402','ENGR403','EGRE404','EGRE405']\nfor course in senior_design_courses:\n   stacked_df.loc[(stacked_df['COURSE']==course)&(stacked_df['TYPE']=='LAB'),'sum_term_crse_wrkld_sample'] = stacked_df.loc[(stacked_df['COURSE']==course)&(stacked_df['TYPE']=='LAB'),'sum_term_crse_wrkld_sample'] * stacked_df.loc[(stacked_df['COURSE']==course)&(stacked_df['TYPE']=='LAB'),'ACTUAL ENROLLMENT'].astype(int) / 4.0\n\n# Ensure that SEM get full credit because we want to reward the faculty member for doing it!\nstacked_df.loc[stacked_df['TYPE'].isin(['SEM']),'sum_term_crse_wrkld_sample'] = stacked_df.loc[stacked_df['TYPE'].isin(['SEM']),'sum_term_crse_wrkld_sample'] / 1.0\n\n\n\nStore the data for later use\nWeâ€™re storing both the stacked and unstacked data. Note that the aggregate measures are stored with the stacked data only.\n\n# Store as CSV files\nsections_df.to_csv('sections_df.csv', index=False)\nstacked_df.to_csv('stacked_df.csv', index=False)\n\n\n\nStore the data in google sheets\n\n# Open the worksheet \nspreadsheet_key = \"1ZK7k8M85CXLof6FdeJYJuGFbfjsOXrCv5mc7OgUInWw\"\nworksheet_name = \"Source data\"\n\ndata_to_write = stacked_df.to_records(index=False)\ntry:\n    sheet = client.open_by_key(spreadsheet_key).worksheet(worksheet_name)\nexcept:\n    sheet = client.open_by_key(spreadsheet_key).add_worksheet( \n        title = worksheet_name,nrows=100,ncols=10\n    )\nsheet.clear()\nset_with_dataframe(worksheet=sheet, dataframe=stacked_df, include_index=False,include_column_header=True, resize=True)\n\n\n\nFreshen persistent instructor data\nThis block identifies any instructors not found in the persistent instructor data and adds them to the list with default values.\n\n#worksheet_name = \"Instructor data\"\n#summary_df = stacked_df.groupby('instructor')[['COLLEGE','DEPT']].apply(lambda x: x.mode().iloc[0]).#reset_index()\n#summary_df = summary_df.sort_values(by=['COLLEGE','DEPT','instructor'])\n#data_to_write = summary_df.to_records(index=False)\n#try:\n#    sheet = client.open_by_key(spreadsheet_key).worksheet(worksheet_name)\n#except:\n#    nrows,ncols = summary_df.shape\n#    sheet = client.open_by_key(spreadsheet_key).add_worksheet( \n#        title = worksheet_name,rows=nrows+1,cols=ncols+1\n#    )\n#sheet.clear()\n#set_with_dataframe(worksheet=sheet, dataframe=summary_df, include_index=False,include_column_header=True, resize=True)\n\n# Find names in df2 that are not in df1\n##names_to_add = df2[~df2['name'].isin(df1['name'])]\n\n# Add the rows with missing names from df2 to df1\n## df1 = pd.concat([df1, names_to_add], ignore_index=True)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site was creating in quarto."
  }
]